@model InventoryManagement.WebUI.ViewModels.Users.EditUserViewModel

@{
    ViewData["Title"] = "Edit User";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <i class="fas fa-user-edit"></i> Edit User
        </h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Index">Users</a></li>
                <li class="breadcrumb-item"><a asp-action="Details" asp-route-id="@Model.Id">@Model.Username</a></li>
                <li class="breadcrumb-item active" aria-current="page">Edit</li>
            </ol>
        </nav>
    </div>

    <!-- Edit User Form -->
    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-user-circle"></i> User Information
                    </h6>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" method="post" novalidate>
                        <input type="hidden" asp-for="Id" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Username" class="form-label">
                                        <i class="fas fa-at text-muted"></i> Username <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="Username" class="form-control" placeholder="Enter username" />
                                    <span asp-validation-for="Username" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Email" class="form-label">
                                        <i class="fas fa-envelope text-muted"></i> Email Address <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="Email" class="form-control" placeholder="Enter email address" />
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label asp-for="FullName" class="form-label">
                                <i class="fas fa-user text-muted"></i> Full Name <span class="text-danger">*</span>
                            </label>
                            <input asp-for="FullName" class="form-control" placeholder="Enter full name" />
                            <span asp-validation-for="FullName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="PhoneNumber" class="form-label">
                                <i class="fas fa-phone text-muted"></i> Phone Number
                            </label>
                            <input asp-for="PhoneNumber" class="form-control" placeholder="Enter phone number (optional)" />
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Role" class="form-label">
                                        <i class="fas fa-user-tag text-muted"></i> Role <span class="text-danger">*</span>
                                    </label>
                                    <select asp-for="Role" asp-items="Model.RoleOptions" class="form-control">
                                        <option value="">Select a role...</option>
                                    </select>
                                    <span asp-validation-for="Role" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="mt-4 pt-2">
                                        <div class="form-check">
                                            <input asp-for="IsActive" class="form-check-input" />
                                            <label asp-for="IsActive" class="form-check-label">
                                                <i class="fas fa-toggle-on text-success"></i> Active User
                                            </label>
                                        </div>
                                        <small class="form-text text-muted">
                                            Inactive users cannot log in to the system.
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <hr>

                        <div class="form-group mb-0">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Update User
                            </button>
                            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                            <a asp-action="ChangePassword" asp-route-id="@Model.Id" class="btn btn-warning">
                                <i class="fas fa-key"></i> Change Password
                            </a>
                            @if (Model.CanDelete)
                            {
                                <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger float-right">
                                    <i class="fas fa-trash"></i> Delete User
                                </a>
                            }
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- User Info Panel -->
        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-info">
                        <i class="fas fa-info-circle"></i> User Information
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col-sm-6">
                            <strong class="text-muted">User ID:</strong>
                        </div>
                        <div class="col-sm-6">
                            <code>#@Model.Id</code>
                        </div>
                    </div>
                    
                    <div class="row mb-2">
                        <div class="col-sm-6">
                            <strong class="text-muted">Created:</strong>
                        </div>
                        <div class="col-sm-6">
                            <small>@Model.CreatedAt.ToString("MMM dd, yyyy")</small>
                        </div>
                    </div>
                    
                    @if (Model.LastLoginAt.HasValue)
                    {
                        <div class="row mb-2">
                            <div class="col-sm-6">
                                <strong class="text-muted">Last Login:</strong>
                            </div>
                            <div class="col-sm-6">
                                <small>@Model.LastLoginAt.Value.ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row mb-2">
                            <div class="col-sm-6">
                                <strong class="text-muted">Last Login:</strong>
                            </div>
                            <div class="col-sm-6">
                                <span class="text-muted">Never</span>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-warning">
                        <i class="fas fa-shield-alt"></i> Permissions
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col-sm-8">
                            <i class="fas fa-edit text-primary"></i> Edit Profile
                        </div>
                        <div class="col-sm-4">
                            @if (Model.CanEdit)
                            {
                                <i class="fas fa-check text-success"></i>
                            }
                            else
                            {
                                <i class="fas fa-times text-danger"></i>
                            }
                        </div>
                    </div>
                    
                    <div class="row mb-2">
                        <div class="col-sm-8">
                            <i class="fas fa-key text-warning"></i> Change Password
                        </div>
                        <div class="col-sm-4">
                            <i class="fas fa-check text-success"></i>
                        </div>
                    </div>
                    
                    <div class="row mb-2">
                        <div class="col-sm-8">
                            <i class="fas fa-trash text-danger"></i> Delete Account
                        </div>
                        <div class="col-sm-4">
                            @if (Model.CanDelete)
                            {
                                <i class="fas fa-check text-success"></i>
                            }
                            else
                            {
                                <i class="fas fa-times text-danger"></i>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-success">
                        <i class="fas fa-lightbulb"></i> Quick Actions
                    </h6>
                </div>
                <div class="card-body">
                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-info btn-sm btn-block mb-2">
                        <i class="fas fa-eye"></i> View Full Details
                    </a>
                    <a asp-action="ChangePassword" asp-route-id="@Model.Id" class="btn btn-outline-warning btn-sm btn-block mb-2">
                        <i class="fas fa-key"></i> Change Password
                    </a>
                    @if (Model.IsActive)
                    {
                        <button type="button" class="btn btn-outline-secondary btn-sm btn-block mb-2" onclick="toggleUserStatus(@Model.Id, false)">
                            <i class="fas fa-user-slash"></i> Deactivate User
                        </button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-outline-success btn-sm btn-block mb-2" onclick="toggleUserStatus(@Model.Id, true)">
                            <i class="fas fa-user-check"></i> Activate User
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleUserStatus(userId, activate) {
            var action = activate ? 'activate' : 'deactivate';
            var message = `Are you sure you want to ${action} this user?`;
            
            if (confirm(message)) {
                // Update the IsActive checkbox and submit form
                $('#IsActive').prop('checked', activate);
                $('form').submit();
            }
        }

        $(document).ready(function() {
            // Username availability check
            $('#Username').on('blur', function() {
                var username = $(this).val();
                var userId = '@Model.Id';
                if (username.length >= 3) {
                    checkUsernameAvailability(username, userId);
                }
            });

            // Email format validation
            $('#Email').on('blur', function() {
                var email = $(this).val();
                var userId = '@Model.Id';
                if (email && !isValidEmail(email)) {
                    showFieldError('Email', 'Please enter a valid email address.');
                } else if (email) {
                    checkEmailAvailability(email, userId);
                } else {
                    clearFieldError('Email');
                }
            });
        });

        function checkUsernameAvailability(username, excludeUserId) {
            // Simulate username availability check
            setTimeout(function() {
                if (username.toLowerCase() === 'admin' || username.toLowerCase() === 'test') {
                    showFieldError('Username', 'This username is not available.');
                } else {
                    clearFieldError('Username');
                }
            }, 500);
        }

        function checkEmailAvailability(email, excludeUserId) {
            // Simulate email availability check
            setTimeout(function() {
                if (email.toLowerCase() === 'admin@example.com' || email.toLowerCase() === 'test@example.com') {
                    showFieldError('Email', 'This email is already registered.');
                } else {
                    clearFieldError('Email');
                }
            }, 500);
        }

        function isValidEmail(email) {
            var regex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            return regex.test(email);
        }

        function showFieldError(fieldName, message) {
            var field = $(`#${fieldName}`);
            var errorSpan = field.siblings('.text-danger');
            
            field.addClass('is-invalid');
            if (errorSpan.length > 0) {
                errorSpan.text(message);
            } else {
                field.after(`<span class="text-danger">${message}</span>`);
            }
        }

        function clearFieldError(fieldName) {
            var field = $(`#${fieldName}`);
            field.removeClass('is-invalid');
            field.siblings('.text-danger').text('');
        }
    </script>
}
