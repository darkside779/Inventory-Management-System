@model InventoryManagement.WebUI.ViewModels.Transactions.TransactionHistoryViewModel

@{
    ViewData["Title"] = "Transaction History";
    ViewData["PageTitle"] = $"Transaction History - {Model.Product?.Name}";
    ViewData["PageDescription"] = "View complete transaction history for a product";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <h4 class="mb-sm-0">Transaction History</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Transaction")">Transactions</a></li>
                        <li class="breadcrumb-item active">History</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Information Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <div class="d-flex align-items-center">
                                <div class="avatar-lg bg-primary bg-soft rounded-circle me-3">
                                    <i class="fas fa-box text-primary fs-1"></i>
                                </div>
                                <div>
                                    <h5 class="mb-1">@Model.Product?.Name</h5>
                                    <p class="text-muted mb-0">
                                        <strong>SKU:</strong> <code>@Model.Product?.SKU</code>
                                        @if (Model.Warehouse != null)
                                        {
                                            <span class="ms-3"><strong>Warehouse:</strong> @Model.Warehouse.Name</span>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 text-end">
                            <a href="@Url.Action("Index")" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Back to Transactions
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="avatar-sm bg-success bg-soft rounded-circle me-3">
                            <i class="fas fa-plus-circle text-success"></i>
                        </div>
                        <div>
                            <h5 class="mb-0">@Model.Statistics.TotalStockIn.ToString("N0")</h5>
                            <p class="text-muted mb-0 small">Total Stock In</p>
                        </div>
                    </div>
                    @if (Model.Statistics.TotalStockInValue > 0)
                    {
                        <div class="mt-2">
                            <small class="text-muted">Value: @Model.Statistics.TotalStockInValue.ToString("C")</small>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="avatar-sm bg-warning bg-soft rounded-circle me-3">
                            <i class="fas fa-minus-circle text-warning"></i>
                        </div>
                        <div>
                            <h5 class="mb-0">@Model.Statistics.TotalStockOut.ToString("N0")</h5>
                            <p class="text-muted mb-0 small">Total Stock Out</p>
                        </div>
                    </div>
                    @if (Model.Statistics.TotalStockOutValue > 0)
                    {
                        <div class="mt-2">
                            <small class="text-muted">Value: @Model.Statistics.TotalStockOutValue.ToString("C")</small>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="avatar-sm bg-info bg-soft rounded-circle me-3">
                            <i class="fas fa-adjust text-info"></i>
                        </div>
                        <div>
                            <h5 class="mb-0">
                                @if (Model.Statistics.TotalAdjustments >= 0)
                                {
                                    <span class="text-success">+@Model.Statistics.TotalAdjustments.ToString("N0")</span>
                                }
                                else
                                {
                                    <span class="text-danger">@Model.Statistics.TotalAdjustments.ToString("N0")</span>
                                }
                            </h5>
                            <p class="text-muted mb-0 small">Net Adjustments</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="avatar-sm bg-secondary bg-soft rounded-circle me-3">
                            <i class="fas fa-calculator text-secondary"></i>
                        </div>
                        <div>
                            <h5 class="mb-0">
                                @if (Model.Statistics.NetMovement >= 0)
                                {
                                    <span class="text-success">+@Model.Statistics.NetMovement.ToString("N0")</span>
                                }
                                else
                                {
                                    <span class="text-danger">@Model.Statistics.NetMovement.ToString("N0")</span>
                                }
                            </h5>
                            <p class="text-muted mb-0 small">Net Movement</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-filter me-1"></i>Filters
                        <button class="btn btn-sm btn-outline-secondary ms-2" type="button" data-bs-toggle="collapse" data-bs-target="#filtersCollapse">
                            <i class="fas fa-chevron-down"></i>
                        </button>
                    </h5>
                </div>
                <div class="collapse" id="filtersCollapse">
                    <div class="card-body">
                        <form method="get" asp-action="History">
                            <input type="hidden" name="productId" value="@Model.Product?.Id" />
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label asp-for="Filter.TransactionType" class="form-label">Transaction Type</label>
                                    <select asp-for="Filter.TransactionType" class="form-select">
                                        <option value="">-- All Types --</option>
                                        <option value="StockIn">Stock In</option>
                                        <option value="StockOut">Stock Out</option>
                                        <option value="Adjustment">Adjustment</option>
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label asp-for="Filter.StartDate" class="form-label">From Date</label>
                                    <input asp-for="Filter.StartDate" type="date" class="form-control" />
                                </div>
                                <div class="col-md-3">
                                    <label asp-for="Filter.EndDate" class="form-label">To Date</label>
                                    <input asp-for="Filter.EndDate" type="date" class="form-control" />
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">&nbsp;</label>
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-search me-1"></i>Filter
                                        </button>
                                        <a href="@Url.Action("History", new { productId = Model.Product?.Id })" class="btn btn-outline-secondary">
                                            <i class="fas fa-times me-1"></i>Clear
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Transaction History -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-history me-1"></i>Transaction History
                        @if (Model.Pagination.TotalCount > 0)
                        {
                            <span class="badge bg-primary ms-2">@Model.Pagination.TotalCount</span>
                        }
                    </h5>
                    @if (Model.Pagination.TotalCount > 0)
                    {
                        <span class="text-muted">
                            Showing @Model.Pagination.StartItem - @Model.Pagination.EndItem of @Model.Pagination.TotalCount
                        </span>
                    }
                </div>
                <div class="card-body p-0">
                    @if (Model.Transactions.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Date/Time</th>
                                        <th>Type</th>
                                        <th>Warehouse</th>
                                        <th class="text-end">Quantity</th>
                                        <th class="text-end">Unit Cost</th>
                                        <th class="text-end">Total Value</th>
                                        <th>Reference</th>
                                        <th>User</th>
                                        <th>Notes</th>
                                        <th class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var transaction in Model.Transactions)
                                    {
                                        <tr>
                                            <td>
                                                <div class="fw-medium">@transaction.TransactionDate.ToString("MMM dd, yyyy")</div>
                                                <small class="text-muted">@transaction.TransactionDate.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                @switch (transaction.Type)
                                                {
                                                    case InventoryManagement.Domain.Enums.TransactionType.StockIn:
                                                        <span class="badge bg-success">
                                                            <i class="fas fa-plus me-1"></i>Stock In
                                                        </span>
                                                        break;
                                                    case InventoryManagement.Domain.Enums.TransactionType.StockOut:
                                                        <span class="badge bg-warning">
                                                            <i class="fas fa-minus me-1"></i>Stock Out
                                                        </span>
                                                        break;
                                                    case InventoryManagement.Domain.Enums.TransactionType.Adjustment:
                                                        <span class="badge bg-info">
                                                            <i class="fas fa-adjust me-1"></i>Adjustment
                                                        </span>
                                                        break;
                                                }
                                            </td>
                                            <td>@transaction.WarehouseName</td>
                                            <td class="text-end">
                                                @if (transaction.Quantity > 0)
                                                {
                                                    <span class="text-success fw-bold">+@transaction.Quantity.ToString("N0")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-danger fw-bold">@transaction.Quantity.ToString("N0")</span>
                                                }
                                            </td>
                                            <td class="text-end">
                                                @if (transaction.UnitPrice.HasValue)
                                                {
                                                    @transaction.UnitPrice.Value.ToString("C")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td class="text-end">
                                                @if (transaction.TotalValue.HasValue)
                                                {
                                                    <span class="fw-bold">@transaction.TotalValue.Value.ToString("C")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(transaction.ReferenceNumber))
                                                {
                                                    <code>@transaction.ReferenceNumber</code>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <small>@transaction.UserName</small>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(transaction.Notes))
                                                {
                                                    <span class="text-truncate d-inline-block" style="max-width: 150px;" title="@transaction.Notes">
                                                        @transaction.Notes
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                <a href="@Url.Action("Details", new { id = transaction.Id })" 
                                                   class="btn btn-sm btn-outline-primary"
                                                   title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.Pagination.TotalPages > 1)
                        {
                            <div class="card-footer">
                                <nav aria-label="Transaction history pagination">
                                    <ul class="pagination pagination-sm justify-content-center mb-0">
                                        @if (Model.Pagination.HasPreviousPage)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href="@Url.Action("History", new { productId = Model.Product?.Id, pageNumber = Model.Pagination.PageNumber - 1, pageSize = Model.Pagination.PageSize })">
                                                    <i class="fas fa-chevron-left"></i>
                                                </a>
                                            </li>
                                        }

                                        @for (int i = Math.Max(1, Model.Pagination.PageNumber - 2); i <= Math.Min(Model.Pagination.TotalPages, Model.Pagination.PageNumber + 2); i++)
                                        {
                                            <li class="page-item @(i == Model.Pagination.PageNumber ? "active" : "")">
                                                <a class="page-link" href="@Url.Action("History", new { productId = Model.Product?.Id, pageNumber = i, pageSize = Model.Pagination.PageSize })">@i</a>
                                            </li>
                                        }

                                        @if (Model.Pagination.HasNextPage)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href="@Url.Action("History", new { productId = Model.Product?.Id, pageNumber = Model.Pagination.PageNumber + 1, pageSize = Model.Pagination.PageSize })">
                                                    <i class="fas fa-chevron-right"></i>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-history fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No transaction history found</h5>
                            <p class="text-muted">No transactions have been recorded for this product with the current filters.</p>
                            @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                            {
                                <div class="mt-3">
                                    <a href="@Url.Action("CreateStockIn", new { productId = Model.Product?.Id })" class="btn btn-success me-2">
                                        <i class="fas fa-plus-circle me-1"></i>Add Stock
                                    </a>
                                    <a href="@Url.Action("CreateAdjustment", new { productId = Model.Product?.Id })" class="btn btn-info">
                                        <i class="fas fa-adjust me-1"></i>Create Adjustment
                                    </a>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Export Actions -->
    @if (Model.Transactions.Any())
    {
        <div class="row mt-3">
            <div class="col-12">
                <div class="text-center">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-secondary" onclick="window.print()">
                            <i class="fas fa-print me-1"></i>Print Report
                        </button>
                        <button type="button" class="btn btn-outline-secondary" onclick="exportToCSV()">
                            <i class="fas fa-file-csv me-1"></i>Export CSV
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-submit form when filters change
            $('#Filter_TransactionType, #Filter_StartDate, #Filter_EndDate').change(function() {
                $(this).closest('form').submit();
            });

            // Initialize tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();
        });

        // Export functionality
        function exportToCSV() {
            var productId = @Html.Raw(Json.Serialize(Model.Product?.Id ?? 0));
            var filters = {
                transactionType: $('#Filter_TransactionType').val(),
                startDate: $('#Filter_StartDate').val(),
                endDate: $('#Filter_EndDate').val()
            };
            
            // In a real implementation, you would make an API call to export data
            alert('Export functionality would be implemented here');
        }
    </script>
}
