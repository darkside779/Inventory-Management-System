@model InventoryManagement.WebUI.ViewModels.Transactions.TransactionDetailsViewModel

@{
    ViewData["Title"] = "Transaction Details";
    ViewData["PageTitle"] = $"Transaction #{Model.Transaction.Id}";
    ViewData["PageDescription"] = "View transaction details and history";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <h4 class="mb-sm-0">@ViewData["PageTitle"]</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Transaction")">Transactions</a></li>
                        <li class="breadcrumb-item active">Details</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <!-- Transaction Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <div class="d-flex align-items-center">
                                @if (Model?.Transaction != null)
                                {
                                    @switch (Model.Transaction.Type)
                                    {
                                        case InventoryManagement.Domain.Enums.TransactionType.StockIn:
                                            <div class="avatar-lg bg-success bg-soft rounded-circle me-3">
                                                <i class="fas fa-arrow-up text-success fs-1"></i>
                                            </div>
                                            break;
                                        case InventoryManagement.Domain.Enums.TransactionType.StockOut:
                                            <div class="avatar-lg bg-warning bg-soft rounded-circle me-3">
                                                <i class="fas fa-arrow-down text-warning fs-1"></i>
                                            </div>
                                            break;
                                        case InventoryManagement.Domain.Enums.TransactionType.Adjustment:
                                            <div class="avatar-lg bg-info bg-soft rounded-circle me-3">
                                                <i class="fas fa-adjust text-info fs-1"></i>
                                            </div>
                                            break;
                                    }
                                    <div>
                                        <h5 class="mb-1">
                                            @switch (Model.Transaction.Type)
                                            {
                                                case InventoryManagement.Domain.Enums.TransactionType.StockIn:
                                                    <span class="text-success">Stock In Transaction</span>
                                                    break;
                                                case InventoryManagement.Domain.Enums.TransactionType.StockOut:
                                                    <span class="text-warning">Stock Out Transaction</span>
                                                    break;
                                                case InventoryManagement.Domain.Enums.TransactionType.Adjustment:
                                                    <span class="text-info">Inventory Adjustment</span>
                                                    break;
                                            }
                                        </h5>
                                        <p class="text-muted mb-0">
                                            <i class="fas fa-calendar me-1"></i>@Model.Transaction.TransactionDate.ToString("MMMM dd, yyyy 'at' HH:mm")
                                        </p>
                                    </div>
                                }
                                else
                                {
                                    <div class="avatar-lg bg-secondary bg-soft rounded-circle me-3">
                                        <i class="fas fa-question text-secondary fs-1"></i>
                                    </div>
                                    <div>
                                        <h5 class="mb-1">
                                            <span class="text-muted">Transaction Not Found</span>
                                        </h5>
                                        <p class="text-muted mb-0">
                                            Transaction details are not available
                                        </p>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="btn-group" role="group">
                                @if (Model?.Transaction?.ProductId != null)
                                {
                                    <a href="@Url.Action("History", new { productId = Model.Transaction.ProductId })" 
                                       class="btn btn-outline-primary">
                                        <i class="fas fa-history me-1"></i>View History
                                    </a>
                                }
                                <a href="@Url.Action("Index")" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left me-1"></i>Back to List
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Transaction Details -->
        <div class="col-xl-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-info-circle me-1"></i>Transaction Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-4">
                        @if (Model?.Transaction != null)
                        {
                            <!-- Product Information -->
                            <div class="col-md-6">
                                <div class="border rounded p-3 bg-light">
                                    <h6 class="fw-semibold mb-2">
                                        <i class="fas fa-box text-primary me-1"></i>Product
                                    </h6>
                                    <div class="mb-2">
                                        <strong>Name:</strong> @(Model.Transaction.ProductName ?? "N/A")
                                    </div>
                                    <div class="mb-0">
                                        <strong>SKU:</strong> <code>@(Model.Transaction.ProductSKU ?? "N/A")</code>
                                    </div>
                                </div>
                            </div>

                            <!-- Warehouse Information -->
                            <div class="col-md-6">
                                <div class="border rounded p-3 bg-light">
                                    <h6 class="fw-semibold mb-2">
                                        <i class="fas fa-warehouse text-secondary me-1"></i>Warehouse
                                    </h6>
                                    <div class="mb-0">
                                        <strong>Location:</strong> @(Model.Transaction.WarehouseName ?? "N/A")
                                    </div>
                                    <div class="mb-0">
                                        <strong>Current Stock:</strong> @(Model.CurrentInventory?.Quantity.ToString("N0") ?? "N/A")
                                    </div>
                                </div>
                            </div>

                            <!-- Quantity Information -->
                            <div class="col-md-6">
                                <div class="border rounded p-3">
                                    <h6 class="fw-semibold mb-2">
                                        <i class="fas fa-calculator text-info me-1"></i>Quantity Details
                                    </h6>
                                    <div class="row">
                                        <div class="col-6">
                                            <div class="mb-2">
                                                <small class="text-muted">Quantity Changed</small>
                                                <div class="fw-bold fs-5">
                                                    @if (Model.Transaction.Quantity > 0)
                                                    {
                                                        <span class="text-success">+@Model.Transaction.Quantity.ToString("N0")</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-danger">@Model.Transaction.Quantity.ToString("N0")</span>
                                                    }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-0">
                                            <small class="text-muted">Units</small>
                                            <div class="fw-bold">@Math.Abs(Model.Transaction.Quantity).ToString("N0")</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Financial Information -->
                        <div class="col-md-6">
                            <div class="border rounded p-3">
                                <h6 class="fw-semibold mb-2">
                                    <i class="fas fa-dollar-sign text-success me-1"></i>Financial Details
                                </h6>
                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-2">
                                            <small class="text-muted">Unit Cost</small>
                                            <div class="fw-bold">
                                                @if (Model.Transaction.UnitPrice.HasValue)
                                                {
                                                    @Model.Transaction.UnitPrice.Value.ToString("C")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not specified</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-0">
                                            <small class="text-muted">Total Value</small>
                                            <div class="fw-bold fs-5">
                                                @if (Model.Transaction.TotalValue.HasValue)
                                                {
                                                    @Model.Transaction.TotalValue.Value.ToString("C")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                            <!-- User Information -->
                            <div class="col-md-6">
                                <div class="border rounded p-3 bg-light">
                                    <h6 class="fw-semibold mb-2">
                                        <i class="fas fa-user text-primary me-1"></i>Performed By
                                    </h6>
                                    <div class="mb-0">
                                        <strong>User:</strong> @(Model.Transaction.UserName ?? "N/A")
                                    </div>
                                </div>
                            </div>

                            <!-- Reference Information -->
                            <div class="col-md-6">
                                <div class="border rounded p-3 bg-light">
                                    <h6 class="fw-semibold mb-2">
                                        <i class="fas fa-hashtag text-secondary me-1"></i>Reference
                                    </h6>
                                    <div class="mb-0">
                                        @if (!string.IsNullOrEmpty(Model.Transaction.ReferenceNumber))
                                        {
                                            <strong>Reference #:</strong> <code>@Model.Transaction.ReferenceNumber</code>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No reference number</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-12">
                                <div class="alert alert-warning" role="alert">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    <strong>Transaction not found!</strong> The requested transaction details are not available.
                                </div>
                            </div>
                        }

                        <!-- Notes -->
                        @if (Model?.Transaction != null && !string.IsNullOrEmpty(Model.Transaction.Notes))
                        {
                            <div class="col-12">
                                <div class="border rounded p-3">
                                    <h6 class="fw-semibold mb-2">
                                        <i class="fas fa-sticky-note text-warning me-1"></i>Notes
                                    </h6>
                                    <p class="mb-0 text-muted">@Model.Transaction.Notes</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Current Inventory Status -->
        <div class="col-xl-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-line me-1"></i>Current Status
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.CurrentInventory != null)
                    {
                        <div class="text-center mb-3">
                            <div class="display-4 fw-bold text-primary">@Model.CurrentInventory.Quantity.ToString("N0")</div>
                            <p class="text-muted mb-0">Current Stock Level</p>
                        </div>

                        <div class="border-top pt-3">
                            <div class="row g-3">
                                <div class="col-6">
                                    <div class="text-center">
                                        <strong>Reorder Level:</strong> @Model.CurrentInventory.MinimumStockLevel.ToString("N0")
                                        <small class="text-muted">Reorder Level</small>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="text-center">
                                        <strong>Max Level:</strong> @Model.CurrentInventory.MaximumStockLevel.ToString("N0")
                                        <small class="text-muted">Max Level</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (Model.CurrentInventory.Quantity <= Model.CurrentInventory.MinimumStockLevel)
                        {
                            <div class="alert alert-warning mt-3 mb-0">
                                <i class="fas fa-exclamation-triangle me-1"></i>
                                <strong>Low Stock Alert:</strong> Current stock is at or below reorder level.
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center text-muted">
                            <i class="fas fa-exclamation-circle fa-2x mb-2"></i>
                            <p>No current inventory information available</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card mt-3">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-lightning-bolt me-1"></i>Quick Actions
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                        {
                            <a href="@Url.Action("CreateStockIn", new { productId = Model.Transaction.ProductId, warehouseId = Model.Transaction.WarehouseId })" 
                               class="btn btn-success btn-sm">
                                <i class="fas fa-plus-circle me-1"></i>Add Stock
                            </a>
                        }
                        @if (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("Employee"))
                        {
                            <a href="@Url.Action("CreateStockOut", new { productId = Model.Transaction.ProductId, warehouseId = Model.Transaction.WarehouseId })" 
                               class="btn btn-warning btn-sm">
                                <i class="fas fa-minus-circle me-1"></i>Remove Stock
                            </a>
                        }
                        @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                        {
                            <a href="@Url.Action("CreateAdjustment", new { productId = Model.Transaction.ProductId, warehouseId = Model.Transaction.WarehouseId })" 
                               class="btn btn-info btn-sm">
                                <i class="fas fa-adjust me-1"></i>Adjust Stock
                            </a>
                        }
                        <a href="@Url.Action("History", new { productId = Model.Transaction.ProductId })" 
                           class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-history me-1"></i>View All History
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Transaction Timeline (if there are related transactions) -->
    @if (Model.RelatedTransactions.Any())
    {
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-history me-1"></i>Recent Related Transactions
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-sm table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Date</th>
                                        <th>Type</th>
                                        <th>Quantity</th>
                                        <th>Reference</th>
                                        <th>User</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var transaction in Model.RelatedTransactions.Take(5))
                                    {
                                        <tr class="@(transaction.Id == Model.Transaction.Id ? "table-primary" : "")">
                                            <td>@transaction.TransactionDate.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                @switch (transaction.Type)
                                                {
                                                    case InventoryManagement.Domain.Enums.TransactionType.StockIn:
                                                        <span class="badge bg-success">Stock In</span>
                                                        break;
                                                    case InventoryManagement.Domain.Enums.TransactionType.StockOut:
                                                        <span class="badge bg-warning">Stock Out</span>
                                                        break;
                                                    case InventoryManagement.Domain.Enums.TransactionType.Adjustment:
                                                        <span class="badge bg-info">Adjustment</span>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                @if (transaction.Quantity > 0)
                                                {
                                                    <span class="text-success">+@transaction.Quantity.ToString("N0")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-danger">@transaction.Quantity.ToString("N0")</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(transaction.ReferenceNumber))
                                                {
                                                    <code>@transaction.ReferenceNumber</code>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>@transaction.UserName</td>
                                            <td>
                                                @if (transaction.Id != Model.Transaction.Id)
                                                {
                                                    <a href="@Url.Action("Details", new { id = transaction.Id })" 
                                                       class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-primary">Current</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
