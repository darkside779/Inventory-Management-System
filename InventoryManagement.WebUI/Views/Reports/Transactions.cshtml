@using Microsoft.AspNetCore.Html
@model InventoryManagement.WebUI.ViewModels.Reports.TransactionReportViewModel
@{
    ViewData["Title"] = "Transaction Report";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3 mb-0">
                    <i class="fas fa-exchange-alt me-2"></i>
                    Transaction Report
                </h1>
                <div class="d-flex align-items-center">
                    <a href="@Url.Action("Dashboard", "Reports")" class="btn btn-outline-secondary me-2">
                        <i class="fas fa-arrow-left me-1"></i>
                        Back to Dashboard
                    </a>
                    @if (Model.Items.Any())
                    {
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#exportModal">
                            <i class="fas fa-download me-1"></i>
                            Export Report
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Panel -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-filter me-2"></i>
                        Filters
                    </h6>
                </div>
                <div class="card-body">
                    <form method="get" asp-action="Transactions">
                        <div class="row">
                            <div class="col-md-3 mb-3">
                                <label asp-for="Filter.StartDate" class="form-label">Start Date</label>
                                <input asp-for="Filter.StartDate" class="form-control" type="date" />
                            </div>
                            <div class="col-md-3 mb-3">
                                <label asp-for="Filter.EndDate" class="form-label">End Date</label>
                                <input asp-for="Filter.EndDate" class="form-control" type="date" />
                            </div>
                            <div class="col-md-3 mb-3">
                                <label asp-for="Filter.TransactionTypes" class="form-label">Transaction Types</label>
                                <select asp-for="Filter.TransactionTypes" class="form-select select2-multiple" multiple="multiple">
                                    <option value="StockIn">Stock In</option>
                                    <option value="StockOut">Stock Out</option>
                                    <option value="Adjustment">Adjustment</option>
                                </select>
                            </div>
                            <div class="col-md-3 mb-3">
                                <label asp-for="Filter.ProductIds" class="form-label">Products</label>
                                <select asp-for="Filter.ProductIds" class="form-select select2-multiple" multiple="multiple">
                                    @if (ViewBag.Products != null)
                                    {
                                        @foreach (var product in (SelectList)ViewBag.Products)
                                        {
                                            <option value="@product.Value">@product.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3 mb-3">
                                <label asp-for="Filter.WarehouseIds" class="form-label">Warehouses</label>
                                <select asp-for="Filter.WarehouseIds" class="form-select select2-multiple" multiple="multiple">
                                    @if (ViewBag.Warehouses != null)
                                    {
                                        @foreach (var warehouse in (SelectList)ViewBag.Warehouses)
                                        {
                                            <option value="@warehouse.Value">@warehouse.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="col-md-3 mb-3">
                                <label asp-for="Filter.UserIds" class="form-label">Users</label>
                                <select asp-for="Filter.UserIds" class="form-select select2-multiple" multiple="multiple">
                                    @if (ViewBag.Users != null)
                                    {
                                        @foreach (var user in (SelectList)ViewBag.Users)
                                        {
                                            <option value="@user.Value">@user.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="col-md-3 mb-3">
                                <label asp-for="Filter.MinValue" class="form-label">Min Value</label>
                                <input asp-for="Filter.MinValue" class="form-control" type="number" step="0.01" />
                            </div>
                            <div class="col-md-3 mb-3">
                                <label asp-for="Filter.MaxValue" class="form-label">Max Value</label>
                                <input asp-for="Filter.MaxValue" class="form-control" type="number" step="0.01" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 d-flex align-items-end mb-3">
                                <button type="submit" class="btn btn-primary me-2">
                                    <i class="fas fa-search me-1"></i>
                                    Apply Filters
                                </button>
                                <a href="@Url.Action("Transactions", "Reports")" class="btn btn-outline-secondary">
                                    <i class="fas fa-times me-1"></i>
                                    Clear Filters
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Summary Cards -->
    @if (Model.Summary != null)
    {
        <div class="row mb-4">
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                    Total Transactions
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @Model.Summary.TotalTransactions.ToString("N0")
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-exchange-alt fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                    Stock In Value
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @((Model.Summary.TotalStockInQuantity * 10m).ToString("C"))
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-arrow-up fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-danger shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                    Stock Out Value
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @((Model.Summary.TotalStockOutQuantity * 10m).ToString("C"))
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-arrow-down fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-info shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                    Net Movement
                                </div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">
                                    @(((Model.Summary.TotalStockInQuantity * 10m) - (Model.Summary.TotalStockOutQuantity * 10m)).ToString("C"))
                                </div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-balance-scale fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Data Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">
                        Transaction History (@Model.TotalCount.ToString("N0") results)
                    </h6>
                    <div class="d-flex align-items-center">
                        <span class="text-muted me-3">Page @Model.PageNumber of @Model.TotalPages</span>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                Show @Model.PageSize
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="?pageSize=10&pageNumber=1">10 per page</a></li>
                                <li><a class="dropdown-item" href="?pageSize=25&pageNumber=1">25 per page</a></li>
                                <li><a class="dropdown-item" href="?pageSize=50&pageNumber=1">50 per page</a></li>
                                <li><a class="dropdown-item" href="?pageSize=100&pageNumber=1">100 per page</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.Items.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover" width="100%" cellspacing="0">
                                <thead class="thead-light">
                                    <tr>
                                        <th>
                                            <a href="?sortBy=TransactionDate&sortDirection=@Model.GetNextSortDirection("TransactionDate")" class="text-decoration-none">
                                                Date <i class="@Model.GetSortClass("TransactionDate")"></i>
                                            </a>
                                        </th>
                                        <th>
                                            <a href="?sortBy=TransactionType&sortDirection=@Model.GetNextSortDirection("TransactionType")" class="text-decoration-none">
                                                Type <i class="@Model.GetSortClass("TransactionType")"></i>
                                            </a>
                                        </th>
                                        <th>
                                            <a href="?sortBy=ProductName&sortDirection=@Model.GetNextSortDirection("ProductName")" class="text-decoration-none">
                                                Product <i class="@Model.GetSortClass("ProductName")"></i>
                                            </a>
                                        </th>
                                        <th>SKU</th>
                                        <th>Warehouse</th>
                                        <th>
                                            <a href="?sortBy=QuantityChanged&sortDirection=@Model.GetNextSortDirection("QuantityChanged")" class="text-decoration-none">
                                                Qty Changed <i class="@Model.GetSortClass("QuantityChanged")"></i>
                                            </a>
                                        </th>
                                        <th>
                                            <a href="?sortBy=UnitCost&sortDirection=@Model.GetNextSortDirection("UnitCost")" class="text-decoration-none">
                                                Unit Cost <i class="@Model.GetSortClass("UnitCost")"></i>
                                            </a>
                                        </th>
                                        <th>
                                            <a href="?sortBy=TotalValue&sortDirection=@Model.GetNextSortDirection("TotalValue")" class="text-decoration-none">
                                                Total Value <i class="@Model.GetSortClass("TotalValue")"></i>
                                            </a>
                                        </th>
                                        <th>User</th>
                                        <th>Reference</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>
                                            <td>@item.TransactionDate.ToString("MMM dd, yyyy HH:mm")</td>
                                            <td>@GetTransactionTypeBadge(item.TransactionType)</td>
                                            <td>@item.ProductName</td>
                                            <td><code>@item.ProductSKU</code></td>
                                            <td>@item.WarehouseName</td>
                                            <td class="text-end @GetQuantityChangeClass(item.TransactionType, item.QuantityChanged)">
                                                @GetQuantityChangeText(item.TransactionType, item.QuantityChanged)
                                            </td>
                                            <td class="text-end">@(item.UnitCost?.ToString("C2") ?? "N/A")</td>
                                            <td class="text-end fw-bold">@item.TotalValue.ToString("C2")</td>
                                            <td>@item.UserName</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(item.ReferenceNumber))
                                                {
                                                    <code>@item.ReferenceNumber</code>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">—</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="Transaction report pagination">
                                <ul class="pagination justify-content-center">
                                    @if (Model.ShowFirst)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?pageNumber=1&pageSize=@Model.PageSize">First</a>
                                        </li>
                                    }
                                    @if (Model.ShowPrevious)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?pageNumber=@(Model.PageNumber - 1)&pageSize=@Model.PageSize">Previous</a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                            <a class="page-link" href="?pageNumber=@i&pageSize=@Model.PageSize">@i</a>
                                        </li>
                                    }

                                    @if (Model.ShowNext)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?pageNumber=@(Model.PageNumber + 1)&pageSize=@Model.PageSize">Next</a>
                                        </li>
                                    }
                                    @if (Model.ShowLast)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?pageNumber=@Model.TotalPages&pageSize=@Model.PageSize">Last</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-search fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No transactions found</h5>
                            <p class="text-muted">Try adjusting your filters or check back later.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Export Modal -->
<div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportModalLabel">Export Transaction Report</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="ExportTransactions" method="post">
                <div class="modal-body">
                    <p>Export the current transaction report with applied filters.</p>
                    
                    <!-- Hidden fields to preserve filters -->
                    <input type="hidden" asp-for="Filter.StartDate" />
                    <input type="hidden" asp-for="Filter.EndDate" />
                    <input type="hidden" asp-for="Filter.ProductIds" />
                    <input type="hidden" asp-for="Filter.WarehouseIds" />
                    <input type="hidden" asp-for="Filter.UserIds" />
                    <input type="hidden" asp-for="Filter.TransactionTypes" />
                    <input type="hidden" asp-for="Filter.MinValue" />
                    <input type="hidden" asp-for="Filter.MaxValue" />

                    <div class="mb-3">
                        <label class="form-label">Export Format</label>
                        <select name="format" class="form-select" required>
                            <option value="csv">CSV (Excel Compatible)</option>
                            <option value="excel">Excel (.xlsx)</option>
                            <option value="pdf">PDF Document</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-download me-1"></i>
                        Export Report
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@functions {
    private IHtmlContent GetTransactionTypeBadge(string transactionType)
    {
        var badgeClass = transactionType?.ToLower() switch
        {
            "stockin" => "badge bg-success",
            "stockout" => "badge bg-danger",
            "adjustment" => "badge bg-warning text-dark",
            _ => "badge bg-secondary"
        };

        var displayText = transactionType switch
        {
            "StockIn" => "Stock In",
            "StockOut" => "Stock Out",
            "Adjustment" => "Adjustment",
            _ => transactionType
        };

        return new HtmlString($"<span class=\"{badgeClass}\">{displayText}</span>");
    }

    private string GetQuantityChangeClass(string transactionType, int quantityChanged)
    {
        return transactionType?.ToLower() switch
        {
            "stockin" => "text-success",
            "stockout" => "text-danger",
            "adjustment" => quantityChanged >= 0 ? "text-success" : "text-danger",
            _ => ""
        };
    }

    private string GetQuantityChangeText(string transactionType, int quantityChanged)
    {
        return transactionType?.ToLower() switch
        {
            "stockin" => $"+{quantityChanged:N0}",
            "stockout" => $"-{Math.Abs(quantityChanged):N0}",
            "adjustment" => quantityChanged >= 0 ? $"+{quantityChanged:N0}" : $"{quantityChanged:N0}",
            _ => quantityChanged.ToString("N0")
        };
    }
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        $(document).ready(function() {
            $('.select2-multiple').select2({
                placeholder: "Select options...",
                allowClear: true
            });

            // Set default date range (last 30 days)
            if (!$('#Filter_StartDate').val() && !$('#Filter_EndDate').val()) {
                var endDate = new Date();
                var startDate = new Date();
                startDate.setDate(startDate.getDate() - 30);
                
                $('#Filter_StartDate').val(startDate.toISOString().split('T')[0]);
                $('#Filter_EndDate').val(endDate.toISOString().split('T')[0]);
            }
        });
    </script>
}

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <style>
        .border-left-primary {
            border-left: 0.25rem solid #4e73df !important;
        }
        .border-left-success {
            border-left: 0.25rem solid #1cc88a !important;
        }
        .border-left-danger {
            border-left: 0.25rem solid #e74a3b !important;
        }
        .border-left-info {
            border-left: 0.25rem solid #36b9cc !important;
        }
        .text-xs {
            font-size: 0.7rem;
        }
        .select2-container {
            width: 100% !important;
        }
    </style>
}
