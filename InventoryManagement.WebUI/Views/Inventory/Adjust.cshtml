@model InventoryManagement.WebUI.ViewModels.Inventory.StockAdjustmentViewModel
@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Page Header -->
            <div class="page-header mb-4">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Inventory")">Inventory</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Adjust Stock</li>
                    </ol>
                </nav>
                <h1 class="page-title">@Model.PageTitle</h1>
                <p class="text-muted">Adjust inventory quantities for products in specific warehouses</p>
            </div>

            <div class="row">
                <div class="col-lg-8">
                    <!-- Stock Adjustment Form -->
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-plus-minus me-2"></i>Stock Adjustment Details
                            </h5>
                        </div>
                        <div class="card-body">
                            <form asp-action="Adjust" method="post" class="needs-validation" novalidate>
                                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                                <!-- Product Selection -->
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label asp-for="ProductId" class="form-label">Product <span class="text-danger">*</span></label>
                                        <select asp-for="ProductId" class="form-select" id="productSelect" required>
                                            <option value="">Select a product...</option>
                                            @if (Model.ProductId > 0)
                                            {
                                                <option value="@Model.ProductId" selected>@Model.ProductName</option>
                                            }
                                        </select>
                                        <span asp-validation-for="ProductId" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="WarehouseId" class="form-label">Warehouse <span class="text-danger">*</span></label>
                                        <select asp-for="WarehouseId" class="form-select" id="warehouseSelect" required>
                                            <option value="">Select a warehouse...</option>
                                            @if (Model.WarehouseId > 0)
                                            {
                                                <option value="@Model.WarehouseId" selected>@Model.WarehouseName</option>
                                            }
                                        </select>
                                        <span asp-validation-for="WarehouseId" class="text-danger"></span>
                                    </div>
                                </div>

                                <!-- Current Stock Info -->
                                @if (Model.ProductId > 0 && Model.WarehouseId > 0)
                                {
                                    <div class="alert alert-info">
                                        <h6 class="alert-heading">Current Stock Information</h6>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <strong>Product:</strong> @Model.ProductName<br>
                                                <strong>Warehouse:</strong> @Model.WarehouseName
                                            </div>
                                            <div class="col-md-6">
                                                <strong>Current Quantity:</strong> <span class="badge bg-primary">@Model.CurrentQuantity.ToString("N0")</span>
                                            </div>
                                        </div>
                                    </div>
                                }

                                <!-- Adjustment Details -->
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label asp-for="AdjustmentQuantity" class="form-label">Adjustment Quantity <span class="text-danger">*</span></label>
                                        <input asp-for="AdjustmentQuantity" class="form-control" type="number" 
                                               placeholder="Enter adjustment quantity" required 
                                               onchange="updateNewQuantity()">
                                        <div class="form-text">
                                            Use positive numbers to add stock, negative to reduce stock
                                        </div>
                                        <span asp-validation-for="AdjustmentQuantity" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">New Quantity (Preview)</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="newQuantityPreview" readonly 
                                                   value="@Model.NewQuantity.ToString("N0")">
                                            <span class="input-group-text">units</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Reason" class="form-label">Reason for Adjustment <span class="text-danger">*</span></label>
                                    <textarea asp-for="Reason" class="form-control" rows="3" 
                                              placeholder="Enter reason for stock adjustment" required></textarea>
                                    <span asp-validation-for="Reason" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="ReferenceNumber" class="form-label">Reference Number</label>
                                    <input asp-for="ReferenceNumber" class="form-control" 
                                           placeholder="Optional reference number (e.g., document ID)">
                                    <span asp-validation-for="ReferenceNumber" class="text-danger"></span>
                                </div>

                                <!-- Form Actions -->
                                <div class="d-flex justify-content-end gap-2">
                                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                        <i class="fas fa-times me-1"></i>Cancel
                                    </a>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save me-1"></i>Apply Adjustment
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4">
                    <!-- Guidelines Panel -->
                    <div class="card">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-lightbulb me-2"></i>Adjustment Guidelines
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <h6 class="text-primary">Positive Adjustments (+)</h6>
                                <ul class="list-unstyled text-sm">
                                    <li><i class="fas fa-check text-success me-1"></i> Stock received</li>
                                    <li><i class="fas fa-check text-success me-1"></i> Found inventory</li>
                                    <li><i class="fas fa-check text-success me-1"></i> Count corrections</li>
                                </ul>
                            </div>
                            <div class="mb-3">
                                <h6 class="text-warning">Negative Adjustments (-)</h6>
                                <ul class="list-unstyled text-sm">
                                    <li><i class="fas fa-minus text-warning me-1"></i> Damaged goods</li>
                                    <li><i class="fas fa-minus text-warning me-1"></i> Expired products</li>
                                    <li><i class="fas fa-minus text-warning me-1"></i> Lost inventory</li>
                                    <li><i class="fas fa-minus text-warning me-1"></i> Count corrections</li>
                                </ul>
                            </div>
                            <div class="alert alert-warning">
                                <small>
                                    <i class="fas fa-exclamation-triangle me-1"></i>
                                    All adjustments will be logged with your user ID and timestamp for audit purposes.
                                </small>
                            </div>
                        </div>
                    </div>

                    <!-- Quick Actions -->
                    <div class="card mt-3">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-bolt me-2"></i>Quick Actions
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="d-grid gap-2">
                                <a href="@Url.Action("Transfer")" class="btn btn-outline-success btn-sm">
                                    <i class="fas fa-exchange-alt me-1"></i>Transfer Stock
                                </a>
                                <a href="@Url.Action("Reserve")" class="btn btn-outline-warning btn-sm">
                                    <i class="fas fa-bookmark me-1"></i>Reserve Stock
                                </a>
                                <a href="@Url.Action("Index")" class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-list me-1"></i>View All Inventory
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateNewQuantity() {
            const currentQty = @Model.CurrentQuantity;
            const adjustmentQty = parseInt(document.getElementById('AdjustmentQuantity').value) || 0;
            const newQty = currentQty + adjustmentQty;
            
            document.getElementById('newQuantityPreview').value = newQty.toLocaleString();
            
            // Update styling based on new quantity
            const preview = document.getElementById('newQuantityPreview');
            if (newQty < 0) {
                preview.classList.add('is-invalid');
                preview.classList.remove('is-valid');
            } else {
                preview.classList.remove('is-invalid');
                preview.classList.add('is-valid');
            }
        }

        // Bootstrap form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Load products and warehouses dynamically
        document.addEventListener('DOMContentLoaded', function() {
            // This would typically load from API endpoints
            // For now, using static data from the model
        });
    </script>
}
