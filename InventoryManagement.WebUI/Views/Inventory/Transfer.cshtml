@model InventoryManagement.WebUI.ViewModels.Inventory.StockTransferViewModel
@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Page Header -->
            <div class="page-header mb-4">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Inventory")">Inventory</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Transfer Stock</li>
                    </ol>
                </nav>
                <h1 class="page-title">@Model.PageTitle</h1>
                <p class="text-muted">Transfer inventory between warehouses</p>
            </div>

            <div class="row">
                <div class="col-lg-8">
                    <!-- Stock Transfer Form -->
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-exchange-alt me-2"></i>Stock Transfer Details
                            </h5>
                        </div>
                        <div class="card-body">
                            <form asp-action="Transfer" method="post" class="needs-validation" novalidate>
                                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                                <!-- Product Selection -->
                                <div class="mb-3">
                                    <label asp-for="ProductId" class="form-label">Product <span class="text-danger">*</span></label>
                                    <select asp-for="ProductId" class="form-select" id="productSelect" required>
                                        <option value="">Select a product...</option>
                                        @if (Model.ProductId > 0)
                                        {
                                            <option value="@Model.ProductId" selected>@Model.ProductName</option>
                                        }
                                    </select>
                                    <span asp-validation-for="ProductId" class="text-danger"></span>
                                </div>

                                <!-- Current Stock Info -->
                                @if (Model.ProductId > 0 && Model.SourceWarehouseId > 0)
                                {
                                    <div class="alert alert-info">
                                        <h6 class="alert-heading">Current Stock Information</h6>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <strong>Product:</strong> @Model.ProductName<br>
                                                <strong>Source Warehouse:</strong> @Model.SourceWarehouseName
                                            </div>
                                            <div class="col-md-6">
                                                <strong>Available Quantity:</strong> <span class="badge bg-success">@Model.AvailableQuantity.ToString("N0")</span>
                                            </div>
                                        </div>
                                    </div>
                                }

                                <!-- Warehouse Selection -->
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label asp-for="SourceWarehouseId" class="form-label">Source Warehouse <span class="text-danger">*</span></label>
                                        <select asp-for="SourceWarehouseId" class="form-select" id="sourceWarehouseSelect" required>
                                            <option value="">Select source warehouse...</option>
                                            @if (Model.SourceWarehouseId > 0)
                                            {
                                                <option value="@Model.SourceWarehouseId" selected>@Model.SourceWarehouseName</option>
                                            }
                                        </select>
                                        <span asp-validation-for="SourceWarehouseId" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="DestinationWarehouseId" class="form-label">Destination Warehouse <span class="text-danger">*</span></label>
                                        <select asp-for="DestinationWarehouseId" class="form-select" id="destinationWarehouseSelect" required>
                                            <option value="">Select destination warehouse...</option>
                                        </select>
                                        <span asp-validation-for="DestinationWarehouseId" class="text-danger"></span>
                                    </div>
                                </div>

                                <!-- Transfer Quantity -->
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label asp-for="Quantity" class="form-label">Transfer Quantity <span class="text-danger">*</span></label>
                                        <input asp-for="Quantity" class="form-control" type="number" min="1" 
                                               placeholder="Enter quantity to transfer" required
                                               max="@Model.AvailableQuantity">
                                        <div class="form-text">
                                            Maximum available: @Model.AvailableQuantity.ToString("N0") units
                                        </div>
                                        <span asp-validation-for="Quantity" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Transfer Impact</label>
                                        <div class="border rounded p-2">
                                            <div class="d-flex justify-content-between">
                                                <span>Source remaining:</span>
                                                <span id="sourceRemaining" class="badge bg-warning">@((Model.AvailableQuantity - Model.Quantity).ToString("N0"))</span>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span>To destination:</span>
                                                <span id="destinationReceiving" class="badge bg-success">@Model.Quantity.ToString("N0")</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Transfer Details -->
                                <div class="mb-3">
                                    <label asp-for="Reason" class="form-label">Reason for Transfer <span class="text-danger">*</span></label>
                                    <textarea asp-for="Reason" class="form-control" rows="3" 
                                              placeholder="Enter reason for stock transfer" required></textarea>
                                    <span asp-validation-for="Reason" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="ReferenceNumber" class="form-label">Reference Number</label>
                                    <input asp-for="ReferenceNumber" class="form-control" 
                                           placeholder="Optional reference number (e.g., transfer order ID)">
                                    <span asp-validation-for="ReferenceNumber" class="text-danger"></span>
                                </div>

                                <!-- Form Actions -->
                                <div class="d-flex justify-content-end gap-2">
                                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                        <i class="fas fa-times me-1"></i>Cancel
                                    </a>
                                    <button type="submit" class="btn btn-success">
                                        <i class="fas fa-exchange-alt me-1"></i>Execute Transfer
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4">
                    <!-- Transfer Guidelines -->
                    <div class="card">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-info-circle me-2"></i>Transfer Guidelines
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <h6 class="text-primary">Transfer Process</h6>
                                <ol class="list-unstyled text-sm">
                                    <li><i class="fas fa-arrow-right text-primary me-1"></i> Stock is removed from source</li>
                                    <li><i class="fas fa-arrow-right text-primary me-1"></i> Stock is added to destination</li>
                                    <li><i class="fas fa-arrow-right text-primary me-1"></i> Two transactions are created</li>
                                    <li><i class="fas fa-arrow-right text-primary me-1"></i> Audit trail is maintained</li>
                                </ol>
                            </div>
                            <div class="alert alert-warning">
                                <small>
                                    <i class="fas fa-exclamation-triangle me-1"></i>
                                    Transfers cannot be undone. Ensure the details are correct before proceeding.
                                </small>
                            </div>
                        </div>
                    </div>

                    <!-- Transfer History -->
                    <div class="card mt-3">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-history me-2"></i>Recent Transfers
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="text-center text-muted">
                                <i class="fas fa-clock fa-2x mb-2"></i>
                                <p class="mb-0">Recent transfer history will appear here</p>
                            </div>
                        </div>
                    </div>

                    <!-- Quick Actions -->
                    <div class="card mt-3">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-bolt me-2"></i>Quick Actions
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="d-grid gap-2">
                                <a href="@Url.Action("Adjust")" class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-plus-minus me-1"></i>Adjust Stock
                                </a>
                                <a href="@Url.Action("Reserve")" class="btn btn-outline-warning btn-sm">
                                    <i class="fas fa-bookmark me-1"></i>Reserve Stock
                                </a>
                                <a href="@Url.Action("Index")" class="btn btn-outline-secondary btn-sm">
                                    <i class="fas fa-list me-1"></i>View All Inventory
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateTransferImpact() {
            const availableQty = @Model.AvailableQuantity;
            const transferQty = parseInt(document.getElementById('Quantity').value) || 0;
            
            document.getElementById('sourceRemaining').textContent = (availableQty - transferQty).toLocaleString();
            document.getElementById('destinationReceiving').textContent = transferQty.toLocaleString();
            
            // Validate transfer quantity
            const quantityInput = document.getElementById('Quantity');
            if (transferQty > availableQty) {
                quantityInput.classList.add('is-invalid');
                quantityInput.classList.remove('is-valid');
            } else if (transferQty > 0) {
                quantityInput.classList.remove('is-invalid');
                quantityInput.classList.add('is-valid');
            }
        }

        // Event listeners
        document.getElementById('Quantity').addEventListener('input', updateTransferImpact);

        // Prevent selecting same warehouse for source and destination
        document.getElementById('sourceWarehouseSelect').addEventListener('change', function() {
            const sourceId = this.value;
            const destinationSelect = document.getElementById('destinationWarehouseSelect');
            
            // Remove selected source from destination options
            Array.from(destinationSelect.options).forEach(option => {
                if (option.value === sourceId) {
                    option.disabled = true;
                } else {
                    option.disabled = false;
                }
            });
        });

        // Bootstrap form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}
