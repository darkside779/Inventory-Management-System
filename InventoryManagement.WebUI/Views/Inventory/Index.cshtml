@model InventoryManagement.WebUI.ViewModels.Inventory.InventoryIndexViewModel
@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Page Header -->
            <div class="page-header d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="page-title">@Model.PageTitle</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Inventory</li>
                        </ol>
                    </nav>
                </div>
                <div class="page-actions">
                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                    {
                        <div class="btn-group" role="group">
                            <a href="@Url.Action("Adjust", "Inventory")" class="btn btn-primary">
                                <i class="fas fa-plus-minus"></i> Adjust Stock
                            </a>
                            <a href="@Url.Action("Transfer", "Inventory")" class="btn btn-success">
                                <i class="fas fa-exchange-alt"></i> Transfer Stock
                            </a>
                            <a href="@Url.Action("Reserve", "Inventory")" class="btn btn-warning">
                                <i class="fas fa-bookmark"></i> Reserve Stock
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Filters and Search -->
            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-md-4">
                            <label for="search" class="form-label">Search Products/SKU</label>
                            <input type="text" class="form-control" id="search" name="search" 
                                   value="@Model.SearchTerm" placeholder="Enter product name or SKU">
                        </div>
                        <div class="col-md-3">
                            <label for="warehouseId" class="form-label">Warehouse</label>
                            <select class="form-select" id="warehouseId" name="warehouseId">
                                <option value="">All Warehouses</option>
                                <!-- Populate with warehouse options -->
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label for="lowStockOnly" class="form-label">Stock Level</label>
                            <select class="form-select" id="lowStockOnly" name="lowStockOnly">
                                <option value="">All Items</option>
                                <option value="true" selected="@(Model.LowStockOnly == true ? "selected" : null)">Low Stock Only</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label for="pageSize" class="form-label">Per Page</label>
                            <select class="form-select" id="pageSize" name="pageSize">
                                <option value="10" selected="@(Model.PageSize == 10 ? "selected" : null)">10</option>
                                <option value="25" selected="@(Model.PageSize == 25 ? "selected" : null)">25</option>
                                <option value="50" selected="@(Model.PageSize == 50 ? "selected" : null)">50</option>
                                <option value="100" selected="@(Model.PageSize == 100 ? "selected" : null)">100</option>
                            </select>
                        </div>
                        <div class="col-md-1 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Inventory Summary Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h6 class="card-title">Total Items</h6>
                                    <h3 class="mb-0">@Model.TotalCount</h3>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-boxes fa-2x opacity-75"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h6 class="card-title">Total Value</h6>
                                    <h3 class="mb-0">@Model.Inventories.Sum(i => i.TotalValue).ToString("C")</h3>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-dollar-sign fa-2x opacity-75"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-warning text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h6 class="card-title">Low Stock Items</h6>
                                    <h3 class="mb-0">@Model.Inventories.Count(i => i.IsBelowMinimum)</h3>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h6 class="card-title">Reserved Items</h6>
                                    <h3 class="mb-0">@Model.Inventories.Sum(i => i.ReservedQuantity)</h3>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-bookmark fa-2x opacity-75"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Inventory Table -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        Inventory Records
                        @if (!string.IsNullOrEmpty(Model.SearchTerm))
                        {
                            <small class="text-muted">- Results for "@Model.SearchTerm"</small>
                        }
                    </h5>
                    <div class="d-flex gap-2">
                        <div class="btn-group btn-group-sm" role="group">
                            <button type="button" class="btn btn-outline-secondary" onclick="exportToExcel()">
                                <i class="fas fa-file-excel"></i> Export
                            </button>
                            <button type="button" class="btn btn-outline-secondary" onclick="printTable()">
                                <i class="fas fa-print"></i> Print
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.Inventories.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover" id="inventoryTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>
                                            <a href="@Url.Action("Index", new { 
                                                search = Model.SearchTerm, 
                                                warehouseId = Model.WarehouseId,
                                                lowStockOnly = Model.LowStockOnly,
                                                sortBy = "ProductName", 
                                                sortDirection = Model.SortBy == "ProductName" && Model.SortDirection == "asc" ? "desc" : "asc",
                                                page = Model.CurrentPage,
                                                pageSize = Model.PageSize 
                                            })" class="text-decoration-none">
                                                Product
                                                @if (Model.SortBy == "ProductName")
                                                {
                                                    <i class="fas fa-sort-@(Model.SortDirection == "asc" ? "up" : "down")"></i>
                                                }
                                            </a>
                                        </th>
                                        <th>SKU</th>
                                        <th>
                                            <a href="@Url.Action("Index", new { 
                                                search = Model.SearchTerm, 
                                                warehouseId = Model.WarehouseId,
                                                lowStockOnly = Model.LowStockOnly,
                                                sortBy = "WarehouseName", 
                                                sortDirection = Model.SortBy == "WarehouseName" && Model.SortDirection == "asc" ? "desc" : "asc",
                                                page = Model.CurrentPage,
                                                pageSize = Model.PageSize 
                                            })" class="text-decoration-none">
                                                Warehouse
                                                @if (Model.SortBy == "WarehouseName")
                                                {
                                                    <i class="fas fa-sort-@(Model.SortDirection == "asc" ? "up" : "down")"></i>
                                                }
                                            </a>
                                        </th>
                                        <th>
                                            <a href="@Url.Action("Index", new { 
                                                search = Model.SearchTerm, 
                                                warehouseId = Model.WarehouseId,
                                                lowStockOnly = Model.LowStockOnly,
                                                sortBy = "Quantity", 
                                                sortDirection = Model.SortBy == "Quantity" && Model.SortDirection == "asc" ? "desc" : "asc",
                                                page = Model.CurrentPage,
                                                pageSize = Model.PageSize 
                                            })" class="text-decoration-none">
                                                Total Qty
                                                @if (Model.SortBy == "Quantity")
                                                {
                                                    <i class="fas fa-sort-@(Model.SortDirection == "asc" ? "up" : "down")"></i>
                                                }
                                            </a>
                                        </th>
                                        <th>Reserved</th>
                                        <th>
                                            <a href="@Url.Action("Index", new { 
                                                search = Model.SearchTerm, 
                                                warehouseId = Model.WarehouseId,
                                                lowStockOnly = Model.LowStockOnly,
                                                sortBy = "AvailableQuantity", 
                                                sortDirection = Model.SortBy == "AvailableQuantity" && Model.SortDirection == "asc" ? "desc" : "asc",
                                                page = Model.CurrentPage,
                                                pageSize = Model.PageSize 
                                            })" class="text-decoration-none">
                                                Available
                                                @if (Model.SortBy == "AvailableQuantity")
                                                {
                                                    <i class="fas fa-sort-@(Model.SortDirection == "asc" ? "up" : "down")"></i>
                                                }
                                            </a>
                                        </th>
                                        <th>Value</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var inventory in Model.Inventories)
                                    {
                                        <tr class="@(inventory.IsBelowMinimum ? "table-warning" : "")">
                                            <td>
                                                <div>
                                                    <strong>@inventory.ProductName</strong>
                                                    @if (inventory.IsBelowMinimum)
                                                    {
                                                        <i class="fas fa-exclamation-triangle text-warning ms-1" 
                                                           title="Low Stock Alert"></i>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <code class="text-muted">@inventory.ProductSKU</code>
                                            </td>
                                            <td>@inventory.WarehouseName</td>
                                            <td>
                                                <span class="badge bg-primary">@inventory.Quantity.ToString("N0")</span>
                                            </td>
                                            <td>
                                                @if (inventory.ReservedQuantity > 0)
                                                {
                                                    <span class="badge bg-warning">@inventory.ReservedQuantity.ToString("N0")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">0</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge bg-success">@inventory.AvailableQuantity.ToString("N0")</span>
                                            </td>
                                            <td>@inventory.TotalValue.ToString("C")</td>
                                            <td>
                                                @if (inventory.IsBelowMinimum)
                                                {
                                                    <span class="badge bg-warning">Low Stock</span>
                                                }
                                                else if (inventory.IsAboveMaximum)
                                                {
                                                    <span class="badge bg-info">Overstock</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-success">Normal</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a href="@Url.Action("Details", new { id = inventory.Id })" 
                                                       class="btn btn-outline-primary" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                                    {
                                                        <a href="@Url.Action("Adjust", new { inventoryId = inventory.Id })" 
                                                           class="btn btn-outline-warning" title="Adjust Stock">
                                                            <i class="fas fa-plus-minus"></i>
                                                        </a>
                                                        <a href="@Url.Action("Transfer", new { inventoryId = inventory.Id })" 
                                                           class="btn btn-outline-success" title="Transfer Stock">
                                                            <i class="fas fa-exchange-alt"></i>
                                                        </a>
                                                        <a href="@Url.Action("Reserve", new { inventoryId = inventory.Id })" 
                                                           class="btn btn-outline-info" title="Reserve Stock">
                                                            <i class="fas fa-bookmark"></i>
                                                        </a>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="Inventory pagination" class="mt-3">
                                <ul class="pagination justify-content-center">
                                    @if (Model.HasPreviousPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { 
                                                page = Model.CurrentPage - 1, 
                                                pageSize = Model.PageSize,
                                                search = Model.SearchTerm,
                                                warehouseId = Model.WarehouseId,
                                                lowStockOnly = Model.LowStockOnly,
                                                sortBy = Model.SortBy,
                                                sortDirection = Model.SortDirection 
                                            })">Previous</a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", new { 
                                                page = i, 
                                                pageSize = Model.PageSize,
                                                search = Model.SearchTerm,
                                                warehouseId = Model.WarehouseId,
                                                lowStockOnly = Model.LowStockOnly,
                                                sortBy = Model.SortBy,
                                                sortDirection = Model.SortDirection 
                                            })">@i</a>
                                        </li>
                                    }

                                    @if (Model.HasNextPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { 
                                                page = Model.CurrentPage + 1, 
                                                pageSize = Model.PageSize,
                                                search = Model.SearchTerm,
                                                warehouseId = Model.WarehouseId,
                                                lowStockOnly = Model.LowStockOnly,
                                                sortBy = Model.SortBy,
                                                sortDirection = Model.SortDirection 
                                            })">Next</a>
                                        </li>
                                    }
                                </ul>
                            </nav>

                            <div class="text-center text-muted">
                                Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to 
                                @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount)) 
                                of @Model.TotalCount entries
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-boxes fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No inventory records found</h5>
                            @if (!string.IsNullOrEmpty(Model.SearchTerm) || Model.WarehouseId.HasValue || Model.LowStockOnly.HasValue)
                            {
                                <p class="text-muted">Try adjusting your search criteria or filters.</p>
                                <a href="@Url.Action("Index")" class="btn btn-outline-primary">Clear Filters</a>
                            }
                            else
                            {
                                <p class="text-muted">Start by adding products and setting up inventory tracking.</p>
                                @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                {
                                    <a href="@Url.Action("Create", "Product")" class="btn btn-primary">Add Product</a>
                                }
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function exportToExcel() {
            // Export functionality
            window.location.href = '@Url.Action("ExportExcel", "Inventory")?' + window.location.search.substring(1);
        }

        function printTable() {
            window.print();
        }

        // Auto-submit form on warehouse or stock level change
        document.getElementById('warehouseId').addEventListener('change', function() {
            this.form.submit();
        });
        
        document.getElementById('lowStockOnly').addEventListener('change', function() {
            this.form.submit();
        });
    </script>
}
