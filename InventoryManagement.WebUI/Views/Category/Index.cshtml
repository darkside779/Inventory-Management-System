@model InventoryManagement.WebUI.ViewModels.Category.CategoryIndexViewModel
@{
    ViewData["Title"] = Model.PageTitle;
    ViewData["PageTitle"] = Model.PageTitle;
    ViewData["PageSubtitle"] = Model.PageSubtitle;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2>@Model.PageTitle</h2>
        <p class="text-muted">@Model.PageSubtitle</p>
    </div>
    @if (Model.CanCreate)
    {
        <a href="@Url.Action("Create", "Category")" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Add Category
        </a>
    }
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="card">
    <div class="card-body">
        @if (Model.Categories.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>@Html.DisplayNameFor(m => m.Categories.First().Name)</th>
                            <th>@Html.DisplayNameFor(m => m.Categories.First().Description)</th>
                            <th>@Html.DisplayNameFor(m => m.Categories.First().ProductCount)</th>
                            <th>@Html.DisplayNameFor(m => m.Categories.First().IsActive)</th>
                            <th>@Html.DisplayNameFor(m => m.Categories.First().CreatedAt)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in Model.Categories)
                        {
                            <tr>
                                <td>
                                    <strong>@category.Name</strong>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(category.Description))
                                    {
                                        <span>@(category.Description.Length > 50 ? category.Description.Substring(0, 50) + "..." : category.Description)</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No description</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-info">@category.ProductCount</span>
                                </td>
                                <td>
                                    @if (category.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Inactive</span>
                                    }
                                </td>
                                <td>@category.CreatedAt.ToString("MMM dd, yyyy")</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("Details", "Category", new { id = category.Id })" 
                                           class="btn btn-sm btn-outline-info" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        @if (Model.CanEdit)
                                        {
                                            <a href="@Url.Action("Edit", "Category", new { id = category.Id })" 
                                               class="btn btn-sm btn-outline-primary" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        }
                                        @if (Model.CanDelete && category.ProductCount == 0)
                                        {
                                            <a href="@Url.Action("Delete", "Category", new { id = category.Id })" 
                                               class="btn btn-sm btn-outline-danger" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-tags fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No categories found</h5>
                <p class="text-muted">Start by creating your first product category.</p>
                @if (Model.CanCreate)
                {
                    <a href="@Url.Action("Create", "Category")" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Add First Category
                    </a>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Auto-hide success/error messages after 5 seconds
        setTimeout(function() {
            $('.alert').fadeOut('slow');
        }, 5000);
    </script>
}
