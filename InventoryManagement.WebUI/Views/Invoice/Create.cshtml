@model InventoryManagement.WebUI.ViewModels.Invoice.CreateInvoiceViewModel
@{
    ViewData["Title"] = "Create Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        /* Customer Autocomplete Styles */
        .customer-autocomplete-container {
            position: relative;
        }
        
        .customer-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #ddd;
            border-top: none;
            border-radius: 0 0 0.375rem 0.375rem;
            max-height: 300px;
            overflow-y: auto;
            z-index: 1000;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            display: none;
        }
        
        .customer-suggestion {
            padding: 12px 16px;
            cursor: pointer;
            border-bottom: 1px solid #f0f0f0;
            transition: background-color 0.2s;
        }
        
        .customer-suggestion:hover,
        .customer-suggestion.active {
            background-color: #f8f9fa;
        }
        
        .customer-suggestion:last-child {
            border-bottom: none;
        }
        
        .suggestion-main {
            font-weight: 500;
            color: #333;
            margin-bottom: 2px;
        }
        
        .suggestion-secondary {
            font-size: 0.875rem;
            color: #6c757d;
        }
        
        .suggestion-create {
            background-color: #e3f2fd;
            border-left: 4px solid #2196f3;
            font-weight: 500;
            color: #1976d2;
        }
        
        .suggestion-create:hover {
            background-color: #bbdefb;
        }
        
        .suggestion-icon {
            width: 16px;
            text-align: center;
            margin-right: 8px;
        }
        
        .new-customer-form {
            animation: slideDown 0.3s ease-out;
        }
        
        @@keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .customer-selected {
            background-color: #d4edda;
            border-color: #28a745;
        }
        
        .loading-spinner {
            display: inline-block;
            width: 16px;
            height: 16px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #007bff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        
        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-md-6">
            <h2 class="h3 mb-0">
                <i class="fas fa-file-invoice-dollar text-success me-2"></i>Create New Invoice
            </h2>
            <p class="text-muted mb-0">Generate a new customer invoice</p>
        </div>
        <div class="col-md-6 text-end">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a asp-controller="Home" asp-action="Index">
                            <i class="fas fa-home"></i> Home
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a asp-action="Index">Invoices</a>
                    </li>
                    <li class="breadcrumb-item active">Create</li>
                </ol>
            </nav>
        </div>
    </div>

    <!-- Invoice Form -->
    <form asp-action="Create" method="post" id="invoiceForm">
        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

        <div class="row">
            <!-- Main Invoice Details -->
            <div class="col-lg-8">
                <div class="card mb-4">
                    <div class="card-header bg-success text-white">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-info-circle me-2"></i>Invoice Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">
                                        Customer <span class="text-danger">*</span>
                                    </label>
                                    <div class="customer-autocomplete-container">
                                        <input type="hidden" asp-for="CustomerId" id="selectedCustomerId" />
                                        <input type="hidden" asp-for="IsNewCustomer" id="isNewCustomer" />
                                        <div class="input-group">
                                            <input type="text" 
                                                   asp-for="CustomerSearchText" 
                                                   id="customerSearchInput" 
                                                   class="form-control" 
                                                   placeholder="Type customer name or email..." 
                                                   autocomplete="off" />
                                            <button type="button" class="btn btn-outline-secondary" id="clearCustomerBtn" title="Clear selection">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                        <div id="customerSuggestions" class="customer-suggestions"></div>
                                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                                        <span asp-validation-for="CustomerSearchText" class="text-danger"></span>
                                    </div>
                                    
                                    <!-- Inline Customer Creation Form (Hidden by default) -->
                                    <div id="newCustomerForm" class="new-customer-form mt-3" style="display: none;">
                                        <div class="card border-primary">
                                            <div class="card-header bg-primary text-white py-2">
                                                <h6 class="mb-0">
                                                    <i class="fas fa-user-plus me-2"></i>New Customer Details
                                                </h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="mb-3">
                                                            <label asp-for="NewCustomer.FullName" class="form-label">
                                                                Full Name <span class="text-danger">*</span>
                                                            </label>
                                                            <input asp-for="NewCustomer.FullName" class="form-control" />
                                                            <span asp-validation-for="NewCustomer.FullName" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <div class="mb-3">
                                                            <label asp-for="NewCustomer.PhoneNumber" class="form-label">
                                                                Phone <span class="text-danger">*</span>
                                                            </label>
                                                            <input asp-for="NewCustomer.PhoneNumber" class="form-control" />
                                                            <span asp-validation-for="NewCustomer.PhoneNumber" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="mb-3">
                                                            <label asp-for="NewCustomer.Email" class="form-label">Email</label>
                                                            <input asp-for="NewCustomer.Email" type="email" class="form-control" />
                                                            <span asp-validation-for="NewCustomer.Email" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <div class="mb-3">
                                                            <label asp-for="NewCustomer.CompanyName" class="form-label">Company</label>
                                                            <input asp-for="NewCustomer.CompanyName" class="form-control" />
                                                            <span asp-validation-for="NewCustomer.CompanyName" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-12">
                                                        <div class="mb-3">
                                                            <label asp-for="NewCustomer.Address" class="form-label">Address</label>
                                                            <textarea asp-for="NewCustomer.Address" class="form-control" rows="2"></textarea>
                                                            <span asp-validation-for="NewCustomer.Address" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="mb-3">
                                                            <label asp-for="NewCustomer.CustomerType" class="form-label">Customer Type</label>
                                                            <select asp-for="NewCustomer.CustomerType" class="form-select">
                                                                <option value="Individual">Individual</option>
                                                                <option value="Business">Business</option>
                                                                <option value="Corporate">Corporate</option>
                                                            </select>
                                                            <span asp-validation-for="NewCustomer.CustomerType" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <div class="mb-3">
                                                            <label asp-for="NewCustomer.PaymentTermsDays" class="form-label">Payment Terms (Days)</label>
                                                            <select asp-for="NewCustomer.PaymentTermsDays" class="form-select">
                                                                <option value="0">Cash on Delivery</option>
                                                                <option value="7">7 Days</option>
                                                                <option value="15">15 Days</option>
                                                                <option value="30" selected>30 Days</option>
                                                                <option value="60">60 Days</option>
                                                                <option value="90">90 Days</option>
                                                            </select>
                                                            <span asp-validation-for="NewCustomer.PaymentTermsDays" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="d-flex gap-2">
                                                    <button type="button" class="btn btn-success btn-sm" id="saveNewCustomerBtn">
                                                        <i class="fas fa-check me-1"></i>Use This Customer
                                                    </button>
                                                    <button type="button" class="btn btn-outline-secondary btn-sm" id="cancelNewCustomerBtn">
                                                        <i class="fas fa-times me-1"></i>Cancel
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label asp-for="InvoiceDate" class="form-label">
                                        Invoice Date <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="InvoiceDate" type="date" class="form-control" />
                                    <span asp-validation-for="InvoiceDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label asp-for="DueDate" class="form-label">
                                        Due Date <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="DueDate" type="date" class="form-control" />
                                    <span asp-validation-for="DueDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="PaymentTerms" class="form-label">Payment Terms</label>
                                    <input asp-for="PaymentTerms" class="form-control" placeholder="Net 30 days" />
                                    <span asp-validation-for="PaymentTerms" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Notes" class="form-label">Notes</label>
                                    <textarea asp-for="Notes" class="form-control" rows="2" placeholder="Additional notes..."></textarea>
                                    <span asp-validation-for="Notes" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Invoice Items -->
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-list me-2"></i>Invoice Items <span class="text-danger">*</span>
                            </h5>
                            <button type="button" class="btn btn-light btn-sm" onclick="addInvoiceItem()">
                                <i class="fas fa-plus me-1"></i>Add Item
                            </button>
                        </div>
                        <small class="text-muted">At least one item is required</small>
                    </div>
                    <div class="card-body">
                        <!-- Invoice Items Header -->
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead class="table-light">
                                    <tr>
                                        <th style="width: 35%;">Product</th>
                                        <th style="width: 10%;">Qty</th>
                                        <th style="width: 15%;">Unit Price</th>
                                        <th style="width: 10%;">Disc %</th>
                                        <th style="width: 10%;">Tax %</th>
                                        <th style="width: 15%;">Total</th>
                                        <th style="width: 5%;">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="invoiceItems">
                                    <tr class="invoice-item" data-item-index="0">
                                        <td>
                                            <select name="Items[0].ProductId" class="form-select product-select" onchange="updateProductInfo(this, 0)">
                                                <option value="">Select product... (@Model.Products.Count() products available)</option>
                                                @foreach (var product in Model.Products)
                                                {
                                                    <option value="@product.Value">@product.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            <input name="Items[0].Quantity" type="number" class="form-control quantity-input" 
                                                   value="1" min="1" onchange="calculateLineTotal(0)" />
                                        </td>
                                        <td>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input name="Items[0].UnitPrice" type="number" class="form-control price-input" 
                                                       step="0.01" min="0" onchange="calculateLineTotal(0)" />
                                            </div>
                                        </td>
                                        <td>
                                            <div class="input-group">
                                                <input name="Items[0].DiscountPercentage" type="number" class="form-control discount-input" 
                                                       step="0.01" min="0" max="100" value="0" onchange="calculateLineTotal(0)" />
                                                <span class="input-group-text">%</span>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="input-group">
                                                <input name="Items[0].TaxPercentage" type="number" class="form-control tax-input" 
                                                       step="0.01" min="0" max="100" value="0" onchange="calculateLineTotal(0)" />
                                                <span class="input-group-text">%</span>
                                            </div>
                                        </td>
                                        <td>
                                            <input type="text" class="form-control line-total fw-bold text-end" readonly />
                                        </td>
                                        <td class="text-center">
                                            <button type="button" class="btn btn-outline-danger btn-sm" 
                                                    onclick="removeInvoiceItem(0)" style="display: none;">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <div class="text-center mt-3" id="noItemsMessage" style="display: none;">
                            <p class="text-muted">No items added yet. Click "Add Item" to get started.</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Invoice Summary -->
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header bg-info text-white">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-calculator me-2"></i>Invoice Summary
                        </h5>
                    </div>
                    <div class="card-body">
                        <table class="table table-borderless">
                            <tr>
                                <td>Subtotal:</td>
                                <td class="text-end fw-bold" id="subtotalAmount">$0.00</td>
                            </tr>
                            <tr>
                                <td>Total Discount:</td>
                                <td class="text-end text-success" id="totalDiscount">$0.00</td>
                            </tr>
                            <tr>
                                <td>Total Tax:</td>
                                <td class="text-end" id="totalTax">$0.00</td>
                            </tr>
                            <tr class="border-top">
                                <td><strong>Total Amount:</strong></td>
                                <td class="text-end fw-bold h5 text-primary" id="totalAmount">$0.00</td>
                            </tr>
                        </table>

                        <hr />

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-success" onclick="return validateInvoiceForm()">
                                <i class="fas fa-save me-1"></i>Create Invoice
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Back to List
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="card mt-3">
                    <div class="card-header">
                        <h6 class="card-title mb-0">Quick Actions</h6>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a asp-controller="Customer" asp-action="Create" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-user-plus me-1"></i>New Customer
                            </a>
                            <a asp-controller="Product" asp-action="Create" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-cube me-1"></i>New Product
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        let itemIndex = 1;
        let productsData = @Html.Raw(ViewBag.ProductsJson ?? "[]");

        function addInvoiceItem() {
            const container = document.getElementById('invoiceItems');
            const productOptions = document.querySelector('.product-select').innerHTML.replace(/Items\[0\]/g, `Items[${itemIndex}]`);
            
            const newItem = `
                <tr class="invoice-item" data-item-index="${itemIndex}">
                    <td>
                        <select name="Items[${itemIndex}].ProductId" class="form-select product-select" onchange="updateProductInfo(this, ${itemIndex})">
                            <option value="">Select product...</option>
                            ${productOptions}
                        </select>
                    </td>
                    <td>
                        <input name="Items[${itemIndex}].Quantity" type="number" class="form-control quantity-input" 
                               value="1" min="1" onchange="calculateLineTotal(${itemIndex})" />
                    </td>
                    <td>
                        <div class="input-group">
                            <span class="input-group-text">$</span>
                            <input name="Items[${itemIndex}].UnitPrice" type="number" class="form-control price-input" 
                                   step="0.01" min="0" onchange="calculateLineTotal(${itemIndex})" />
                        </div>
                    </td>
                    <td>
                        <div class="input-group">
                            <input name="Items[${itemIndex}].DiscountPercentage" type="number" class="form-control discount-input" 
                                   step="0.01" min="0" max="100" value="0" onchange="calculateLineTotal(${itemIndex})" />
                            <span class="input-group-text">%</span>
                        </div>
                    </td>
                    <td>
                        <div class="input-group">
                            <input name="Items[${itemIndex}].TaxPercentage" type="number" class="form-control tax-input" 
                                   step="0.01" min="0" max="100" value="0" onchange="calculateLineTotal(${itemIndex})" />
                            <span class="input-group-text">%</span>
                        </div>
                    </td>
                    <td>
                        <input type="text" class="form-control line-total fw-bold text-end" readonly />
                    </td>
                    <td class="text-center">
                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                onclick="removeInvoiceItem(${itemIndex})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>`;
            
            container.insertAdjacentHTML('beforeend', newItem);
            itemIndex++;
            updateRemoveButtons();
            reinitSelect2();
        }

        function removeInvoiceItem(index) {
            const item = document.querySelector(`[data-item-index="${index}"]`);
            if (item) {
                item.remove();
                calculateTotals();
                updateRemoveButtons();
            }
        }

        function updateRemoveButtons() {
            const items = document.querySelectorAll('.invoice-item');
            items.forEach((item, idx) => {
                const removeBtn = item.querySelector('button[onclick*="removeInvoiceItem"]');
                if (removeBtn) {
                    removeBtn.style.display = items.length > 1 ? 'block' : 'none';
                }
            });
        }

        function calculateLineTotal(index) {
            const item = document.querySelector(`[data-item-index="${index}"]`);
            if (!item) return;

            const quantity = parseFloat(item.querySelector('.quantity-input').value) || 0;
            const unitPrice = parseFloat(item.querySelector('.price-input').value) || 0;
            const discountPercent = parseFloat(item.querySelector('.discount-input').value) || 0;
            const taxPercent = parseFloat(item.querySelector('.tax-input').value) || 0;

            const lineTotal = quantity * unitPrice;
            const discountAmount = lineTotal * (discountPercent / 100);
            const taxableAmount = lineTotal - discountAmount;
            const taxAmount = taxableAmount * (taxPercent / 100);
            const finalTotal = lineTotal - discountAmount + taxAmount;

            item.querySelector('.line-total').value = '$' + finalTotal.toFixed(2);
            
            calculateTotals();
        }

        function calculateTotals() {
            let subtotal = 0;
            let totalDiscount = 0;
            let totalTax = 0;

            document.querySelectorAll('.invoice-item').forEach(item => {
                const quantity = parseFloat(item.querySelector('.quantity-input').value) || 0;
                const unitPrice = parseFloat(item.querySelector('.price-input').value) || 0;
                const discountPercent = parseFloat(item.querySelector('.discount-input').value) || 0;
                const taxPercent = parseFloat(item.querySelector('.tax-input').value) || 0;

                const lineTotal = quantity * unitPrice;
                const discountAmount = lineTotal * (discountPercent / 100);
                const taxAmount = (lineTotal - discountAmount) * (taxPercent / 100);

                subtotal += lineTotal;
                totalDiscount += discountAmount;
                totalTax += taxAmount;
            });

            const finalTotal = subtotal - totalDiscount + totalTax;

            document.getElementById('subtotalAmount').textContent = '$' + subtotal.toFixed(2);
            document.getElementById('totalDiscount').textContent = '$' + totalDiscount.toFixed(2);
            document.getElementById('totalTax').textContent = '$' + totalTax.toFixed(2);
            document.getElementById('totalAmount').textContent = '$' + finalTotal.toFixed(2);
        }

        function updateProductInfo(selectElement, index) {
            const productId = selectElement.value;
            if (!productId) return;
            
            // Find product data
            const product = productsData.find(p => p.id == productId);
            if (product) {
                // Auto-fill unit price
                const item = document.querySelector(`[data-item-index="${index}"]`);
                const priceInput = item.querySelector('.price-input');
                priceInput.value = product.price.toFixed(2);
                
                // Trigger calculation
                calculateLineTotal(index);
            }
        }

        // Validate invoice form before submission
        function validateInvoiceForm() {
            const items = document.querySelectorAll('.invoice-item');
            let hasValidItems = false;
            
            items.forEach(item => {
                const productSelect = item.querySelector('.product-select');
                const quantityInput = item.querySelector('.quantity-input');
                const priceInput = item.querySelector('.price-input');
                
                if (productSelect && productSelect.value && 
                    quantityInput && quantityInput.value > 0 && 
                    priceInput && priceInput.value > 0) {
                    hasValidItems = true;
                }
            });
            
            if (!hasValidItems) {
                alert('Please add at least one product to the invoice before submitting.');
                return false;
            }
            
            return true;
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            updateRemoveButtons();
            calculateTotals();
            $('.product-select').select2({
                width: '100%',
                placeholder: 'Select product...'
            });
            $('.customer-select').select2({
                width: '100%',
                placeholder: 'Select a customer...'
            });
        });
        
        // Re-initialize select2 for new dropdowns
        function reinitSelect2() {
            $('.product-select').select2({
                width: '100%',
                placeholder: 'Select product...'
            });
        }
        
        // Patch addInvoiceItem to reinit select2
        const origAddInvoiceItem = addInvoiceItem;
        addInvoiceItem = function() {
            origAddInvoiceItem();
            reinitSelect2();
        }
        
        // Customer autocomplete variables
        let searchTimeout;
        let selectedCustomer = null;
        let isNewCustomer = false;

        // Customer Autocomplete Functionality
        $(document).ready(function() {
            const $searchInput = $('#customerSearchInput');
            const $suggestions = $('#customerSuggestions');
            const $selectedCustomerId = $('#selectedCustomerId');
            const $isNewCustomerFlag = $('#isNewCustomer');
            const $newCustomerForm = $('#newCustomerForm');
            const $clearBtn = $('#clearCustomerBtn');

            // Search customers as user types
            $searchInput.on('input', function() {
                const term = $(this).val().trim();
                
                clearTimeout(searchTimeout);
                
                if (term.length < 2) {
                    hideSuggestions();
                    return;
                }

                // Show loading
                showLoading();

                searchTimeout = setTimeout(() => {
                    searchCustomers(term);
                }, 300); // Debounce for 300ms
            });

            // Handle keyboard navigation
            $searchInput.on('keydown', function(e) {
                const $active = $suggestions.find('.customer-suggestion.active');
                
                if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    if ($active.length === 0) {
                        $suggestions.find('.customer-suggestion:first').addClass('active');
                    } else {
                        $active.removeClass('active').next('.customer-suggestion').addClass('active');
                    }
                } else if (e.key === 'ArrowUp') {
                    e.preventDefault();
                    if ($active.length > 0) {
                        $active.removeClass('active').prev('.customer-suggestion').addClass('active');
                    }
                } else if (e.key === 'Enter') {
                    e.preventDefault();
                    if ($active.length > 0) {
                        $active.click();
                    }
                } else if (e.key === 'Escape') {
                    hideSuggestions();
                }
            });

            // Clear customer selection
            $clearBtn.on('click', function() {
                clearCustomerSelection();
            });

            // Hide suggestions when clicking outside
            $(document).on('click', function(e) {
                if (!$(e.target).closest('.customer-autocomplete-container').length) {
                    hideSuggestions();
                }
            });

            // New customer form handlers
            $('#saveNewCustomerBtn').on('click', function() {
                if (validateNewCustomerForm()) {
                    const customerName = $('#NewCustomer_FullName').val();
                    selectNewCustomer(customerName);
                }
            });

            $('#cancelNewCustomerBtn').on('click', function() {
                hideNewCustomerForm();
                $searchInput.focus();
            });

            function searchCustomers(term) {
                $.ajax({
                    url: '@Url.Action("SearchCustomers", "Customer")',
                    method: 'GET',
                    data: { term: term },
                    success: function(response) {
                        displaySuggestions(response.customers, term);
                    },
                    error: function() {
                        hideSuggestions();
                        console.error('Error searching customers');
                    }
                });
            }

            function displaySuggestions(customers, searchTerm) {
                $suggestions.empty();

                if (customers.length === 0) {
                    // Show "Create new customer" option
                    const createOption = $(`
                        <div class="customer-suggestion suggestion-create" data-action="create">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-plus suggestion-icon"></i>
                                <div>
                                    <div class="suggestion-main">Create "${searchTerm}" as new customer</div>
                                    <div class="suggestion-secondary">Click to add customer details</div>
                                </div>
                            </div>
                        </div>
                    `);
                    $suggestions.append(createOption);
                } else {
                    // Show existing customers
                    customers.forEach(customer => {
                        const suggestion = $(`
                            <div class="customer-suggestion" data-customer-id="${customer.id}">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-user suggestion-icon"></i>
                                    <div class="flex-grow-1">
                                        <div class="suggestion-main">${customer.displayText}</div>
                                        <div class="suggestion-secondary">${customer.secondaryText || ''}</div>
                                    </div>
                                </div>
                            </div>
                        `);
                        $suggestions.append(suggestion);
                    });

                    // Add "Create new customer" option at the end
                    const createOption = $(`
                        <div class="customer-suggestion suggestion-create" data-action="create">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-plus suggestion-icon"></i>
                                <div>
                                    <div class="suggestion-main">Create "${searchTerm}" as new customer</div>
                                    <div class="suggestion-secondary">Click to add customer details</div>
                                </div>
                            </div>
                        </div>
                    `);
                    $suggestions.append(createOption);
                }

                // Handle suggestion clicks
                $suggestions.find('.customer-suggestion').on('click', function() {
                    const customerId = $(this).data('customer-id');
                    const action = $(this).data('action');

                    if (action === 'create') {
                        showNewCustomerForm(searchTerm);
                    } else {
                        selectExistingCustomer(customerId, $(this).find('.suggestion-main').text());
                    }
                });

                showSuggestions();
            }

            function selectExistingCustomer(customerId, customerName) {
                selectedCustomer = customerId;
                isNewCustomer = false;
                
                $selectedCustomerId.val(customerId);
                $isNewCustomerFlag.val(false);
                $searchInput.val(customerName).addClass('customer-selected');
                
                hideSuggestions();
                hideNewCustomerForm();
            }

            function showNewCustomerForm(customerName) {
                // Pre-fill the name
                $('#NewCustomer_FullName').val(customerName);
                
                // Show the form
                $newCustomerForm.show();
                hideSuggestions();
                
                // Focus on phone field (now required)
                $('#NewCustomer_PhoneNumber').focus();
            }

            function selectNewCustomer(customerName) {
                selectedCustomer = null;
                isNewCustomer = true;
                
                $selectedCustomerId.val('');
                $isNewCustomerFlag.val(true);
                $searchInput.val(customerName).addClass('customer-selected');
                
                hideNewCustomerForm();
            }

            function clearCustomerSelection() {
                selectedCustomer = null;
                isNewCustomer = false;
                
                $selectedCustomerId.val('');
                $isNewCustomerFlag.val(false);
                $searchInput.val('').removeClass('customer-selected');
                
                hideSuggestions();
                hideNewCustomerForm();
                clearNewCustomerForm();
                
                $searchInput.focus();
            }

            function validateNewCustomerForm() {
                const name = $('#NewCustomer_FullName').val().trim();
                const phone = $('#NewCustomer_PhoneNumber').val().trim();
                const email = $('#NewCustomer_Email').val().trim();
                
                if (!name) {
                    alert('Please enter customer name');
                    $('#NewCustomer_FullName').focus();
                    return false;
                }
                
                if (!phone) {
                    alert('Please enter customer phone number');
                    $('#NewCustomer_PhoneNumber').focus();
                    return false;
                }
                
                // Optional email validation - only if provided
                if (email) {
                    const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                    if (!emailRegex.test(email)) {
                        alert('Please enter a valid email address');
                        $('#NewCustomer_Email').focus();
                        return false;
                    }
                }
                
                return true;
            }

            function clearNewCustomerForm() {
                $('#newCustomerForm input, #newCustomerForm textarea, #newCustomerForm select').val('');
                $('#NewCustomer_CustomerType').val('Individual');
                $('#NewCustomer_PaymentTermsDays').val('30');
            }

            function showSuggestions() {
                $suggestions.show();
            }

            function hideSuggestions() {
                $suggestions.hide().find('.customer-suggestion').removeClass('active');
            }

            function hideNewCustomerForm() {
                $newCustomerForm.hide();
            }

            function showLoading() {
                $suggestions.html(`
                    <div class="customer-suggestion">
                        <div class="d-flex align-items-center">
                            <div class="loading-spinner me-2"></div>
                            <div>Searching customers...</div>
                        </div>
                    </div>
                `).show();
            }
        });
    </script>
}
