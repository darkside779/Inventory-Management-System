@model InventoryManagement.WebUI.ViewModels.Invoice.EditInvoiceViewModel
@{
    ViewData["Title"] = $"Edit Invoice - {Model.InvoiceNumber}";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-md-6">
            <h2 class="h3 mb-0">
                <i class="fas fa-edit text-warning me-2"></i>Edit Invoice
            </h2>
            <p class="text-muted mb-0">@Model.InvoiceNumber</p>
        </div>
        <div class="col-md-6 text-end">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a asp-controller="Home" asp-action="Index">
                            <i class="fas fa-home"></i> Home
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a asp-action="Index">Invoices</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a asp-action="Details" asp-route-id="@Model.Id">@Model.InvoiceNumber</a>
                    </li>
                    <li class="breadcrumb-item active">Edit</li>
                </ol>
            </nav>
        </div>
    </div>

    <!-- Invoice Form -->
    <form asp-action="Edit" method="post" id="invoiceForm">
        <input asp-for="Id" type="hidden" />
        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

        <div class="row">
            <!-- Main Invoice Details -->
            <div class="col-lg-8">
                <div class="card mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-info-circle me-2"></i>Invoice Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="InvoiceNumber" class="form-label">
                                        Invoice Number <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="InvoiceNumber" class="form-control" readonly />
                                    <span asp-validation-for="InvoiceNumber" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Status" class="form-label">
                                        Status <span class="text-danger">*</span>
                                    </label>
                                    <select asp-for="Status" asp-items="Model.StatusOptions" class="form-select">
                                        <option value="">Select status...</option>
                                    </select>
                                    <span asp-validation-for="Status" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CustomerId" class="form-label">
                                        Customer <span class="text-danger">*</span>
                                    </label>
                                    <select asp-for="CustomerId" asp-items="Model.Customers" class="form-select customer-select">
                                        <option value="">Select a customer...</option>
                                    </select>
                                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label asp-for="InvoiceDate" class="form-label">
                                        Invoice Date <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="InvoiceDate" type="date" class="form-control" />
                                    <span asp-validation-for="InvoiceDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label asp-for="DueDate" class="form-label">
                                        Due Date <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="DueDate" type="date" class="form-control" />
                                    <span asp-validation-for="DueDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="PaymentTerms" class="form-label">Payment Terms</label>
                                    <input asp-for="PaymentTerms" class="form-control" placeholder="Net 30 days" />
                                    <span asp-validation-for="PaymentTerms" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Notes" class="form-label">Notes</label>
                                    <textarea asp-for="Notes" class="form-control" rows="2" placeholder="Additional notes..."></textarea>
                                    <span asp-validation-for="Notes" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Invoice Items -->
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-list me-2"></i>Invoice Items <span class="text-danger">*</span>
                            </h5>
                            <button type="button" class="btn btn-light btn-sm" onclick="addInvoiceItem()">
                                <i class="fas fa-plus me-1"></i>Add Item
                            </button>
                        </div>
                        <small class="text-muted">At least one item is required</small>
                    </div>
                    <div class="card-body">
                        <!-- Invoice Items Header -->
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead class="table-light">
                                    <tr>
                                        <th style="width: 35%;">Product</th>
                                        <th style="width: 10%;">Qty</th>
                                        <th style="width: 15%;">Unit Price</th>
                                        <th style="width: 10%;">Disc %</th>
                                        <th style="width: 10%;">Tax %</th>
                                        <th style="width: 15%;">Total</th>
                                        <th style="width: 5%;">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="invoiceItems">
                                    @if (Model.Items.Any())
                                    {
                                        @for (int i = 0; i < Model.Items.Count; i++)
                                        {
                                            <tr class="invoice-item" data-item-index="@i">
                                                <input name="Items[@i].Id" type="hidden" value="@Model.Items[i].Id" />
                                                <td>
                                                    <select name="Items[@i].ProductId" asp-for="Items[i].ProductId" class="form-select product-select" onchange="updateProductInfo(this, @i)">
                                                        <option value="">Select product...</option>
                                                        @foreach (var product in Model.Products)
                                                        {
                                                            <option value="@product.Value" selected="@(product.Value == Model.Items[i].ProductId.ToString())">@product.Text</option>
                                                        }
                                                    </select>
                                                </td>
                                                <td>
                                                    <input name="Items[@i].Quantity" asp-for="Items[i].Quantity" type="number" class="form-control quantity-input" 
                                                           min="1" onchange="calculateLineTotal(@i)" />
                                                </td>
                                                <td>
                                                    <div class="input-group">
                                                        <span class="input-group-text">$</span>
                                                        <input name="Items[@i].UnitPrice" asp-for="Items[i].UnitPrice" type="number" class="form-control price-input" 
                                                               step="0.01" min="0" onchange="calculateLineTotal(@i)" />
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="input-group">
                                                        <input name="Items[@i].DiscountPercentage" asp-for="Items[i].DiscountPercentage" type="number" class="form-control discount-input" 
                                                               step="0.01" min="0" max="100" onchange="calculateLineTotal(@i)" />
                                                        <span class="input-group-text">%</span>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="input-group">
                                                        <input name="Items[@i].TaxPercentage" asp-for="Items[i].TaxPercentage" type="number" class="form-control tax-input" 
                                                               step="0.01" min="0" max="100" onchange="calculateLineTotal(@i)" />
                                                        <span class="input-group-text">%</span>
                                                    </div>
                                                </td>
                                                <td>
                                                    <input type="text" class="form-control line-total fw-bold text-end" readonly />
                                                </td>
                                                <td class="text-center">
                                                    <button type="button" class="btn btn-outline-danger btn-sm" 
                                                            onclick="removeInvoiceItem(@i)">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr class="invoice-item" data-item-index="0">
                                            <td>
                                                <select name="Items[0].ProductId" class="form-select product-select" onchange="updateProductInfo(this, 0)">
                                                    <option value="">Select product... (@Model.Products.Count() products available)</option>
                                                    @foreach (var product in Model.Products)
                                                    {
                                                        <option value="@product.Value">@product.Text</option>
                                                    }
                                                </select>
                                            </td>
                                            <td>
                                                <input name="Items[0].Quantity" type="number" class="form-control quantity-input" 
                                                       value="1" min="1" onchange="calculateLineTotal(0)" />
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-text">$</span>
                                                    <input name="Items[0].UnitPrice" type="number" class="form-control price-input" 
                                                           step="0.01" min="0" onchange="calculateLineTotal(0)" />
                                                </div>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <input name="Items[0].DiscountPercentage" type="number" class="form-control discount-input" 
                                                           step="0.01" min="0" max="100" value="0" onchange="calculateLineTotal(0)" />
                                                    <span class="input-group-text">%</span>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <input name="Items[0].TaxPercentage" type="number" class="form-control tax-input" 
                                                           step="0.01" min="0" max="100" value="0" onchange="calculateLineTotal(0)" />
                                                    <span class="input-group-text">%</span>
                                                </div>
                                            </td>
                                            <td>
                                                <input type="text" class="form-control line-total fw-bold text-end" readonly />
                                            </td>
                                            <td class="text-center">
                                                <button type="button" class="btn btn-outline-danger btn-sm" 
                                                        onclick="removeInvoiceItem(0)" style="display: none;">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="text-center mt-3" id="noItemsMessage" style="display: none;">
                            <p class="text-muted">No items added yet. Click "Add Item" to get started.</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Invoice Summary -->
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header bg-info text-white">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-calculator me-2"></i>Invoice Summary
                        </h5>
                    </div>
                    <div class="card-body">
                        <table class="table table-borderless">
                            <tr>
                                <td>Subtotal:</td>
                                <td class="text-end fw-bold" id="subtotalAmount">$0.00</td>
                            </tr>
                            <tr>
                                <td>Total Discount:</td>
                                <td class="text-end text-success" id="totalDiscount">$0.00</td>
                            </tr>
                            <tr>
                                <td>Total Tax:</td>
                                <td class="text-end" id="totalTax">$0.00</td>
                            </tr>
                            <tr class="border-top">
                                <td><strong>Total Amount:</strong></td>
                                <td class="text-end fw-bold h5 text-primary" id="totalAmount">$0.00</td>
                            </tr>
                        </table>

                        <hr />

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-warning" onclick="return validateInvoiceForm()">
                                <i class="fas fa-save me-1"></i>Update Invoice
                            </button>
                            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Back to Details
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="card mt-3">
                    <div class="card-header">
                        <h6 class="card-title mb-0">Quick Actions</h6>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a asp-controller="Customer" asp-action="Create" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-user-plus me-1"></i>New Customer
                            </a>
                            <a asp-controller="Product" asp-action="Create" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-cube me-1"></i>New Product
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        let itemIndex = @(Model.Items.Any() ? Model.Items.Count : 1);
        let productsData = @Html.Raw(ViewBag.ProductsJson ?? "[]");

        function addInvoiceItem() {
            const container = document.getElementById('invoiceItems');
            
            // Generate product options from server data
            let productOptionsHtml = '';
            @foreach (var product in Model.Products)
            {
                <text>productOptionsHtml += '<option value="@product.Value">@Html.Raw(product.Text.Replace("'", "\\'"))</option>';</text>
            }
            
            const newItem = `
                <tr class="invoice-item" data-item-index="${itemIndex}">
                    <td>
                        <select name="Items[${itemIndex}].ProductId" class="form-select product-select" onchange="updateProductInfo(this, ${itemIndex})">
                            <option value="">Select product...</option>
                            ${productOptionsHtml}
                        </select>
                    </td>
                    <td>
                        <input name="Items[${itemIndex}].Quantity" type="number" class="form-control quantity-input" 
                               value="1" min="1" onchange="calculateLineTotal(${itemIndex})" />
                    </td>
                    <td>
                        <div class="input-group">
                            <span class="input-group-text">$</span>
                            <input name="Items[${itemIndex}].UnitPrice" type="number" class="form-control price-input" 
                                   step="0.01" min="0" onchange="calculateLineTotal(${itemIndex})" />
                        </div>
                    </td>
                    <td>
                        <div class="input-group">
                            <input name="Items[${itemIndex}].DiscountPercentage" type="number" class="form-control discount-input" 
                                   step="0.01" min="0" max="100" value="0" onchange="calculateLineTotal(${itemIndex})" />
                            <span class="input-group-text">%</span>
                        </div>
                    </td>
                    <td>
                        <div class="input-group">
                            <input name="Items[${itemIndex}].TaxPercentage" type="number" class="form-control tax-input" 
                                   step="0.01" min="0" max="100" value="0" onchange="calculateLineTotal(${itemIndex})" />
                            <span class="input-group-text">%</span>
                        </div>
                    </td>
                    <td>
                        <input type="text" class="form-control line-total fw-bold text-end" readonly />
                    </td>
                    <td class="text-center">
                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                onclick="removeInvoiceItem(${itemIndex})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>`;
            
            container.insertAdjacentHTML('beforeend', newItem);
            itemIndex++;
            updateRemoveButtons();
            reinitSelect2();
        }

        function removeInvoiceItem(index) {
            const item = document.querySelector(`[data-item-index="${index}"]`);
            if (item) {
                item.remove();
                calculateTotals();
                updateRemoveButtons();
            }
        }

        function updateRemoveButtons() {
            const items = document.querySelectorAll('.invoice-item');
            items.forEach((item, idx) => {
                const removeBtn = item.querySelector('button[onclick*="removeInvoiceItem"]');
                if (removeBtn) {
                    removeBtn.style.display = items.length > 1 ? 'block' : 'none';
                }
            });
        }

        function calculateLineTotal(index) {
            const item = document.querySelector(`[data-item-index="${index}"]`);
            if (!item) return;

            const quantity = parseFloat(item.querySelector('.quantity-input').value) || 0;
            const unitPrice = parseFloat(item.querySelector('.price-input').value) || 0;
            const discountPercent = parseFloat(item.querySelector('.discount-input').value) || 0;
            const taxPercent = parseFloat(item.querySelector('.tax-input').value) || 0;

            const lineTotal = quantity * unitPrice;
            const discountAmount = lineTotal * (discountPercent / 100);
            const taxableAmount = lineTotal - discountAmount;
            const taxAmount = taxableAmount * (taxPercent / 100);
            const finalTotal = lineTotal - discountAmount + taxAmount;

            item.querySelector('.line-total').value = '$' + finalTotal.toFixed(2);
            
            calculateTotals();
        }

        function calculateTotals() {
            let subtotal = 0;
            let totalDiscount = 0;
            let totalTax = 0;

            document.querySelectorAll('.invoice-item').forEach(item => {
                const quantity = parseFloat(item.querySelector('.quantity-input').value) || 0;
                const unitPrice = parseFloat(item.querySelector('.price-input').value) || 0;
                const discountPercent = parseFloat(item.querySelector('.discount-input').value) || 0;
                const taxPercent = parseFloat(item.querySelector('.tax-input').value) || 0;

                const lineTotal = quantity * unitPrice;
                const discountAmount = lineTotal * (discountPercent / 100);
                const taxAmount = (lineTotal - discountAmount) * (taxPercent / 100);

                subtotal += lineTotal;
                totalDiscount += discountAmount;
                totalTax += taxAmount;
            });

            const finalTotal = subtotal - totalDiscount + totalTax;

            document.getElementById('subtotalAmount').textContent = '$' + subtotal.toFixed(2);
            document.getElementById('totalDiscount').textContent = '$' + totalDiscount.toFixed(2);
            document.getElementById('totalTax').textContent = '$' + totalTax.toFixed(2);
            document.getElementById('totalAmount').textContent = '$' + finalTotal.toFixed(2);
        }

        function updateProductInfo(selectElement, index) {
            const productId = selectElement.value;
            if (!productId) return;
            
            // Find product data
            const product = productsData.find(p => p.id == productId);
            if (product) {
                // Auto-fill unit price
                const item = document.querySelector(`[data-item-index="${index}"]`);
                const priceInput = item.querySelector('.price-input');
                priceInput.value = product.price.toFixed(2);
                
                // Trigger calculation
                calculateLineTotal(index);
            }
        }

        // Validate invoice form before submission
        function validateInvoiceForm() {
            const items = document.querySelectorAll('.invoice-item');
            let hasValidItems = false;
            
            items.forEach(item => {
                const productSelect = item.querySelector('.product-select');
                const quantityInput = item.querySelector('.quantity-input');
                const priceInput = item.querySelector('.price-input');
                
                if (productSelect && productSelect.value && 
                    quantityInput && quantityInput.value > 0 && 
                    priceInput && priceInput.value > 0) {
                    hasValidItems = true;
                }
            });
            
            if (!hasValidItems) {
                alert('Please add at least one product to the invoice before submitting.');
                return false;
            }
            
            return true;
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            updateRemoveButtons();
            calculateTotals();
            $('.product-select').select2({
                width: '100%',
                placeholder: 'Select product...'
            });
            $('.customer-select').select2({
                width: '100%',
                placeholder: 'Select a customer...'
            });
        });
        
        // Re-initialize select2 for new dropdowns
        function reinitSelect2() {
            $('.product-select').select2({
                width: '100%',
                placeholder: 'Select product...'
            });
        }
    </script>
}
