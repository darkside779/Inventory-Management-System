@* Loading spinner component *@

<div class="loading-overlay" id="loadingOverlay" style="display: none;">
    <div class="loading-content">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="loading-text mt-2">
            <span id="loadingMessage">Loading...</span>
        </div>
    </div>
</div>

@* Inline loading spinner for smaller areas *@
<div class="text-center loading-inline" id="loadingInline" style="display: none;">
    <div class="spinner-border spinner-border-sm text-primary me-2" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
    <span>Loading...</span>
</div>

<style>
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .loading-content {
        background: white;
        padding: 2rem;
        border-radius: 0.5rem;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .loading-text {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .loading-inline {
        padding: 1rem;
        color: #6c757d;
    }

    /* Button loading state */
    .btn-loading {
        position: relative;
        pointer-events: none;
    }

    .btn-loading .btn-text {
        opacity: 0;
    }

    .btn-loading::after {
        content: "";
        position: absolute;
        width: 1rem;
        height: 1rem;
        top: 50%;
        left: 50%;
        margin-left: -0.5rem;
        margin-top: -0.5rem;
        border: 2px solid transparent;
        border-top-color: currentColor;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>

<script>
    // Loading utility functions
    window.LoadingUtils = {
        show: function(message = 'Loading...') {
            document.getElementById('loadingMessage').textContent = message;
            document.getElementById('loadingOverlay').style.display = 'flex';
        },
        
        hide: function() {
            document.getElementById('loadingOverlay').style.display = 'none';
        },
        
        showInline: function() {
            document.getElementById('loadingInline').style.display = 'block';
        },
        
        hideInline: function() {
            document.getElementById('loadingInline').style.display = 'none';
        },
        
        setButtonLoading: function(button, loading = true) {
            if (loading) {
                button.classList.add('btn-loading');
                button.disabled = true;
            } else {
                button.classList.remove('btn-loading');
                button.disabled = false;
            }
        }
    };

    // Auto-show loading for forms and AJAX requests
    document.addEventListener('DOMContentLoaded', function() {
        // Show loading on form submit
        document.querySelectorAll('form').forEach(function(form) {
            form.addEventListener('submit', function(e) {
                const submitButton = form.querySelector('button[type="submit"]');
                if (submitButton) {
                    LoadingUtils.setButtonLoading(submitButton, true);
                }
            });
        });

        // Show loading for AJAX requests
        if (typeof $ !== 'undefined') {
            $(document).ajaxStart(function() {
                LoadingUtils.show();
            }).ajaxStop(function() {
                LoadingUtils.hide();
            });
        }
    });
</script>
